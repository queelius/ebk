{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ebk - eBook Library Manager","text":"<p>Welcome to the ebk documentation! ebk is a powerful eBook metadata management tool with SQLAlchemy + SQLite backend, comprehensive Python API, rich CLI, and AI-powered features.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>\ud83d\uddc4\ufe0f SQLAlchemy + SQLite Backend - Robust database with full-text search (FTS5)</li> <li>\ud83d\udcda Fluent Python API - Comprehensive programmatic interface with method chaining</li> <li>\ud83c\udfa8 Rich CLI - Beautiful terminal interface powered by Typer and Rich</li> <li>\ud83c\udf10 Web Server - FastAPI-based interface for browsing and managing your library</li> <li>\ud83e\udd16 AI-Powered Enrichment - Automatic metadata enhancement using LLMs</li> <li>\ud83d\udce5 Multiple Import Sources - Calibre, raw ebooks, batch imports</li> <li>\ud83d\udd0d Advanced Search - Full-text search with FTS5 indexing</li> <li>\ud83d\udce4 Flexible Export - Hugo sites, ZIP archives, JSON</li> <li>\ud83d\udd27 Configuration System - Centralized config at <code>~/.config/ebk/config.json</code></li> <li>\ud83c\udff7\ufe0f Personal Organization - Tags, ratings, reading status, notes</li> </ul>"},{"location":"#quick-example","title":"Quick Example","text":"<pre><code>from pathlib import Path\nfrom ebk.library_db import Library\n\n# Open library\nlib = Library.open(Path(\"~/ebooks\"))\n\n# Fluent query interface\nrecent_python = (lib.query()\n    .filter_by_language(\"en\")\n    .filter_by_subject(\"Python\")\n    .order_by(\"publication_date\", desc=True)\n    .limit(20)\n    .all())\n\n# Full-text search\nresults = lib.search(\"machine learning algorithms\")\n\n# Update reading status\nlib.update_reading_status(book_id=42, status=\"reading\", rating=5)\n\nlib.close()\n</code></pre>"},{"location":"#new-in-latest-version","title":"New in Latest Version","text":""},{"location":"#configuration-system","title":"Configuration System","text":"<p>Centralized configuration at <code>~/.config/ebk/config.json</code>:</p> <pre><code># Initialize configuration\nebk config init\n\n# Set defaults\nebk config set library.default_path ~/my-ebooks\nebk config set server.port 8000\nebk config set llm.model llama3.2\n</code></pre>"},{"location":"#llm-powered-features","title":"LLM-Powered Features","text":"<p>Enrich your library metadata using AI:</p> <pre><code># Setup Ollama\nollama pull llama3.2\n\n# Configure ebk\nebk config set llm.provider ollama\nebk config set llm.model llama3.2\n\n# Enrich metadata\nebk enrich ~/library --generate-tags --categorize\n</code></pre>"},{"location":"#web-server","title":"Web Server","text":"<p>Browse your library with a modern web interface:</p> <pre><code># Start server\nebk serve ~/library\n\n# Or with auto-open\nebk config set server.auto_open_browser true\nebk serve ~/library\n</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Installation - Install ebk and optional features</li> <li>Quick Start - Get up and running in minutes</li> <li>CLI Reference - Complete command reference</li> </ul>"},{"location":"#architecture","title":"Architecture","text":"<p>ebk follows a clean, modular architecture:</p> <pre><code>graph TD\n    A[Core Library&lt;br/&gt;ebk.library] --&gt; B[CLI&lt;br/&gt;ebk.cli]\n    A --&gt; C[Import/Export&lt;br/&gt;Modules]\n    A --&gt; D[Integrations&lt;br/&gt;Optional]\n    D --&gt; E[Streamlit&lt;br/&gt;Web UI]\n    D --&gt; F[MCP Server&lt;br/&gt;AI Assistants]\n    D --&gt; G[Visualizations&lt;br/&gt;Network Graphs]</code></pre>"},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udc1b Report Issues</li> <li>\ud83d\udcac Discussions</li> <li>\ud83d\udce7 Contact</li> </ul>"},{"location":"API_GUIDE/","title":"ebk Fluent API Guide","text":"<p>The ebk library provides a comprehensive, fluent API for programmatic ebook library management.</p>"},{"location":"API_GUIDE/#quick-start","title":"Quick Start","text":"<pre><code>from ebk import Library\n\n# Open or create a library\nlib = Library.open(\"/path/to/library\")\n# or\nlib = Library.create(\"/path/to/new/library\")\n\n# Add books\nlib.add_entry(\n    title=\"The Python Book\",\n    creators=[\"John Doe\", \"Jane Smith\"],\n    subjects=[\"Programming\", \"Python\"],\n    language=\"en\",\n    date=\"2023-01-15\"\n).save()\n\n# Search and query\npython_books = lib.search(\"Python\")\nrecent_books = lib.query().where(\"date\", \"2023\", \"&gt;=\").execute()\n</code></pre>"},{"location":"API_GUIDE/#core-concepts","title":"Core Concepts","text":""},{"location":"API_GUIDE/#library","title":"Library","text":"<p>The <code>Library</code> class is the main entry point for all operations:</p> <pre><code>from ebk import Library\n\n# Create from different sources\nlib = Library.create(\"/path/to/library\")\nlib = Library.from_calibre(\"/calibre/library\", \"/output/path\")\nlib = Library.from_ebooks(\"/ebooks/folder\", \"/output/path\")\n\n# Basic operations\nprint(f\"Library has {len(lib)} entries\")\n\n# Iterate over entries\nfor entry in lib:\n    print(f\"{entry.title} by {', '.join(entry.creators)}\")\n</code></pre>"},{"location":"API_GUIDE/#entry","title":"Entry","text":"<p>Individual books are represented as <code>Entry</code> objects with fluent methods:</p> <pre><code># Get an entry\nentry = lib[0]  # By index\nentry = lib.find(\"unique-id-here\")  # By ID\n\n# Access properties\nprint(entry.title)\nprint(entry.creators)\nprint(entry.subjects)\n\n# Modify with chaining\nentry.set(\"publisher\", \"Tech Press\") \\\n     .add_creator(\"Co Author\") \\\n     .add_subject(\"Advanced Topics\") \\\n     .save()\n\n# Update multiple fields\nentry.update(\n    edition=\"2nd\",\n    pages=450,\n    isbn=\"978-1234567890\"\n)\n</code></pre>"},{"location":"API_GUIDE/#querybuilder","title":"QueryBuilder","text":"<p>The query builder provides powerful, chainable search capabilities:</p> <pre><code># Simple queries\nenglish_books = lib.query().where(\"language\", \"en\").execute()\n\n# Complex queries with operators\nresults = (lib.query()\n    .where(\"language\", \"en\")\n    .where(\"date\", \"2020\", \"&gt;=\")\n    .where(\"subjects\", \"Python\", \"contains\")\n    .order_by(\"title\")\n    .take(10)\n    .execute())\n\n# Custom filters\nresults = lib.query().where_lambda(\n    lambda e: len(e.get(\"creators\", [])) &gt; 1 and e.get(\"pages\", 0) &gt; 300\n).execute()\n\n# Search across multiple fields\nresults = lib.query().where_any(\n    [\"title\", \"description\", \"subjects\"], \n    \"machine learning\"\n).execute()\n\n# Count and existence\ncount = lib.query().where(\"language\", \"en\").count()\nhas_french = lib.query().where(\"language\", \"fr\").exists()\nfirst_match = lib.query().where(\"publisher\", \"O'Reilly\").first()\n</code></pre>"},{"location":"API_GUIDE/#common-operations","title":"Common Operations","text":""},{"location":"API_GUIDE/#adding-books","title":"Adding Books","text":"<pre><code># Single entry\nentry = lib.add_entry(\n    title=\"Deep Learning\",\n    creators=[\"Ian Goodfellow\", \"Yoshua Bengio\"],\n    subjects=[\"AI\", \"Machine Learning\", \"Neural Networks\"],\n    language=\"en\",\n    date=\"2016-11-18\",\n    isbn=\"9780262035613\",\n    publisher=\"MIT Press\"\n)\n\n# Multiple entries\nentries = [\n    {\"title\": \"Book 1\", \"creators\": [\"Author 1\"]},\n    {\"title\": \"Book 2\", \"creators\": [\"Author 2\"]}\n]\nlib.add_entries(entries).save()\n\n# From files (requires actual file handling)\nentry = lib.add_entry(\n    title=\"My Book\",\n    creators=[\"Me\"],\n    file_paths=[\"book.pdf\", \"book.epub\"],\n    cover_path=\"cover.jpg\"\n)\n</code></pre>"},{"location":"API_GUIDE/#searching-and-filtering","title":"Searching and Filtering","text":"<pre><code># Simple text search\nresults = lib.search(\"Python\")\nresults = lib.search(\"Doe\", fields=[\"creators\"])\n\n# Find specific entries\nbooks = lib.find_by_title(\"Python Programming\")\nentry = lib.find(\"unique-id-123\")\n\n# Filter with predicates\nfiltered = lib.filter(lambda e: e.get(\"year\", 0) &gt; 2020)\npython_books = lib.filter(lambda e: \"Python\" in e.get(\"subjects\", []))\n\n# Query builder for complex searches\nquery = (lib.query()\n    .where(\"language\", \"en\")\n    .where(\"subjects\", \"Programming\", \"contains\")\n    .where_lambda(lambda e: e.get(\"pages\", 0) &gt; 200)\n    .order_by(\"date\", descending=True))\n\nresults = query.execute()\ncount = query.count()\nfirst = query.first()\n</code></pre>"},{"location":"API_GUIDE/#modifying-entries","title":"Modifying Entries","text":"<pre><code># Update single entry\nentry = lib.find(\"some-id\")\nentry.title = \"Updated Title\"\nentry.add_creator(\"New Author\")\nentry.add_subject(\"New Topic\")\nentry.save()\n\n# Update multiple entries\nlib.update_all(lambda e: e.set(\"reviewed\", True))\nlib.update_all(lambda e: e.add_subject(\"ebook\") if e.get(\"format\") == \"pdf\" else None)\n\n# Batch tagging\nlib.tag_all(\"to-read\")\nlib.filter(lambda e: e.get(\"year\") == \"2023\").tag_all(\"recent\")\n\n# Remove entries\nlib.remove(\"unique-id\")\nlib.remove_where(lambda e: e.get(\"language\") == \"unknown\")\n</code></pre>"},{"location":"API_GUIDE/#batch-operations","title":"Batch Operations","text":"<pre><code># Queue multiple operations\n(lib.batch()\n    .add_entry(title=\"Book 1\", creators=[\"Author 1\"])\n    .add_entry(title=\"Book 2\", creators=[\"Author 2\"])\n    .update(\"some-id\", publisher=\"New Publisher\")\n    .remove(\"old-id\")\n    .execute())\n</code></pre>"},{"location":"API_GUIDE/#transactions","title":"Transactions","text":"<pre><code># Automatic rollback on error\ntry:\n    with lib.transaction() as txn_lib:\n        txn_lib.add_entry(title=\"Book 1\", creators=[\"Author\"])\n        txn_lib.remove(\"some-id\")\n        # If error occurs here, all changes are rolled back\n        raise Exception(\"Something went wrong\")\nexcept:\n    # Library remains unchanged\n    pass\n</code></pre>"},{"location":"API_GUIDE/#advanced-features","title":"Advanced Features","text":""},{"location":"API_GUIDE/#merging-libraries","title":"Merging Libraries","text":"<pre><code>lib1 = Library.open(\"/library1\")\nlib2 = Library.open(\"/library2\")\n\n# Different merge operations\nmerged = lib1.union(lib2)        # All unique entries\nmerged = lib1.intersect(lib2)    # Common entries only\nmerged = lib1.difference(lib2)   # In lib1 but not lib2\n\n# Generic merge\nmerged = lib1.merge(lib2, operation=\"symdiff\")\n</code></pre>"},{"location":"API_GUIDE/#statistics-and-analysis","title":"Statistics and Analysis","text":"<pre><code># Get library statistics\nstats = lib.stats()\nprint(f\"Total books: {stats['total_entries']}\")\nprint(f\"Languages: {stats['languages']}\")\nprint(f\"Top authors: {list(stats['creators'].items())[:5]}\")\nprint(f\"Popular subjects: {list(stats['subjects'].items())[:10]}\")\n\n# Group entries\nby_language = lib.group_by(\"language\")\nby_year = lib.group_by(\"year\")\nby_author = lib.group_by(\"creators\")\n\n# Find duplicates\nduplicate_titles = lib.duplicates(by=\"title\")\nfor title, entries in duplicate_titles:\n    print(f\"'{title}' has {len(entries)} copies\")\n</code></pre>"},{"location":"API_GUIDE/#exporting","title":"Exporting","text":"<pre><code># Export to different formats\nlib.export_to_zip(\"/path/to/library.zip\")\n\nlib.export_to_hugo(\n    \"/path/to/hugo/site\",\n    organize_by=\"year\"  # or \"language\", \"subject\", \"creator\", \"flat\"\n)\n\n# Export as navigable symlink DAG\nlib.export_to_symlink_dag(\n    \"/path/to/dag\",\n    tag_field=\"subjects\",    # Field to use for hierarchy\n    include_files=True,      # Copy actual ebook files\n    create_index=True        # Generate HTML indexes\n)\n\n# Export as graph (co-authorship or subject networks)\nlib.export_graph(\n    \"library.graphml\",       # Supports .graphml, .gexf, .json\n    graph_type=\"coauthor\",   # or \"subject\"\n    min_connections=2        # Filter edges with fewer connections\n)\n\n# Chain operations before export\n(lib.filter(lambda e: e.get(\"language\") == \"en\")\n    .tag_all(\"english\")\n    .export_to_hugo(\"/hugo/site\", organize_by=\"subject\"))\n</code></pre>"},{"location":"API_GUIDE/#jmespath-queries","title":"JMESPath Queries","text":"<pre><code># Use JMESPath for complex queries\nresults = lib.query().jmespath(\n    \"[?language=='en' &amp;&amp; contains(subjects, 'Python')]\"\n).execute()\n\nresults = lib.query().jmespath(\n    \"[?year &gt; `2020`].{title: title, authors: creators}\"\n).execute()\n</code></pre>"},{"location":"API_GUIDE/#finding-similar-books-and-recommendations","title":"Finding Similar Books and Recommendations","text":"<pre><code># Find books similar to a specific entry\nsimilar = lib.find_similar(\"book_unique_id\", threshold=0.7)\n# or by Entry object\nentry = lib.find(\"book_unique_id\")\nsimilar = lib.find_similar(entry, threshold=0.5)\n\n# Get recommendations\n# Random from highly-rated or popular books\nrecommended = lib.recommend(limit=10)\n\n# Based on specific books (collaborative filtering style)\nrecommended = lib.recommend(\n    based_on=[\"book_id_1\", \"book_id_2\", \"book_id_3\"],\n    limit=20\n)\n\n# Analyze reading patterns\nanalysis = lib.analyze_reading_patterns()\nprint(f\"Subject diversity (entropy): {analysis['reading_diversity']['subject_entropy']}\")\nprint(f\"Top genres: {analysis['reading_diversity']['subject_concentration']}\")\nprint(f\"Books per author: {analysis['reading_diversity']['books_per_author']}\")\n</code></pre>"},{"location":"API_GUIDE/#real-world-examples","title":"Real-World Examples","text":""},{"location":"API_GUIDE/#symlink-dag-navigation","title":"Symlink DAG Navigation","text":"<pre><code># Create a browsable view of your library organized by hierarchical tags\nlib = Library.open(\"/my/ebook-library\")\n\n# Basic export with subject hierarchy\nlib.export_to_symlink_dag(\"/my/browsable-library\")\n\n# Organize by authors instead of subjects\nlib.export_to_symlink_dag(\n    \"/my/author-organized-library\",\n    tag_field=\"creators\"\n)\n\n# Filter and export only programming books\n(lib.filter(lambda e: \"Programming\" in e.get(\"subjects\", []))\n    .export_to_symlink_dag(\"/my/programming-books\"))\n</code></pre> <p>This creates a structure like: <pre><code>Programming/\n  Python/\n    Web/\n      Django Web Development \u2192 ../../../_books/book_123\n    Machine Learning/\n      ML with Python \u2192 ../../../_books/book_456\n</code></pre></p>"},{"location":"API_GUIDE/#building-a-reading-list","title":"Building a Reading List","text":"<pre><code># Create a reading list from multiple criteria\nreading_list = Library.create(\"/my/reading-list\")\n\n# Add highly rated Python books from main library\npython_books = (main_lib.query()\n    .where(\"subjects\", \"Python\", \"contains\")\n    .where(\"rating\", 4, \"&gt;=\")\n    .execute())\n\nreading_list.add_entries(python_books)\n\n# Add recent AI books\nai_books = (main_lib.query()\n    .where(\"subjects\", \"Artificial Intelligence\", \"contains\")\n    .where(\"year\", \"2022\", \"&gt;=\")\n    .execute())\n\nreading_list.add_entries(ai_books)\n\n# Tag and export\nreading_list.tag_all(\"to-read\") \\\n           .export_to_hugo(\"/my/website\", organize_by=\"subject\")\n</code></pre>"},{"location":"API_GUIDE/#library-maintenance","title":"Library Maintenance","text":"<pre><code># Clean up library\nlib = Library.open(\"/my/library\")\n\n# Remove entries without files\nlib.remove_where(lambda e: not e.get(\"file_paths\"))\n\n# Fix common issues\nlib.update_all(lambda e: \n    e.set(\"language\", \"en\") if not e.get(\"language\") else None\n)\n\n# Normalize subjects\ndef normalize_subjects(entry):\n    subjects = entry.get(\"subjects\", [])\n    normalized = []\n    for subject in subjects:\n        # Normalize case and spacing\n        normalized.append(subject.strip().title())\n    entry.subjects = normalized\n\nlib.update_all(normalize_subjects)\n\n# Find and handle duplicates\nfor title, duplicates in lib.duplicates(by=\"title\"):\n    print(f\"\\nFound {len(duplicates)} copies of '{title}':\")\n    for i, dup in enumerate(duplicates):\n        print(f\"  {i+1}. ID: {dup.id}, Authors: {dup.creators}\")\n    # Optionally remove duplicates keeping the first\n    for dup in duplicates[1:]:\n        lib.remove(dup.id)\n\nlib.save()\n</code></pre>"},{"location":"API_GUIDE/#creating-a-catalog-website","title":"Creating a Catalog Website","text":"<pre><code># Generate a website with books organized by multiple criteria\nlib = Library.open(\"/my/library\")\n\n# Create different views\nbase_path = Path(\"/my/hugo-site\")\n\n# By year for recent additions\n(lib.filter(lambda e: e.get(\"year\", 0) &gt;= 2020)\n    .export_to_hugo(base_path / \"recent\", organize_by=\"year\"))\n\n# By language\nlib.export_to_hugo(base_path / \"languages\", organize_by=\"language\")\n\n# By subject for browsing\nlib.export_to_hugo(base_path / \"subjects\", organize_by=\"subject\")\n\n# Featured collection\nfeatured = lib.filter(lambda e: \n    e.get(\"rating\", 0) &gt;= 4.5 or \"Award Winner\" in e.get(\"subjects\", [])\n)\nfeatured.export_to_hugo(base_path / \"featured\", organize_by=\"flat\")\n</code></pre>"},{"location":"API_GUIDE/#best-practices","title":"Best Practices","text":"<ol> <li>Always save changes: Use <code>.save()</code> after modifications</li> <li>Use transactions for multi-step operations that should be atomic</li> <li>Chain operations for cleaner code</li> <li>Filter before export to create focused collections</li> <li>Use batch operations for better performance with many changes</li> <li>Handle missing fields with <code>.get()</code> and defaults</li> <li>Use symlink DAG for filesystem-based navigation of tag hierarchies</li> <li>Leverage similarity for discovery and recommendations</li> </ol>"},{"location":"API_GUIDE/#performance-tips","title":"Performance Tips","text":"<ul> <li>Use <code>query()</code> for read-only operations (doesn't modify library)</li> <li>Use <code>filter()</code> when you need a new library instance</li> <li>Batch operations are more efficient than individual updates</li> <li>For large libraries, use <code>.take()</code> and <code>.skip()</code> for pagination</li> <li>JMESPath queries can be faster for complex conditions</li> </ul>"},{"location":"about/changelog/","title":"Changelog","text":"<p>Project changelog and release notes.</p> <p>See ROADMAP.md for planned features.</p>"},{"location":"about/license/","title":"License","text":"<p>ebk is distributed under the MIT License.</p> <p>See LICENSE file for details.</p>"},{"location":"advanced/batch-operations/","title":"Batch Operations","text":"<p>Efficiently processing multiple books.</p>"},{"location":"advanced/batch-operations/#see-also","title":"See Also","text":"<ul> <li>LLM Features - Batch enrichment</li> </ul>"},{"location":"advanced/hugo-export/","title":"Hugo Export with Jinja Templates","text":"<p>The ebk Hugo export now supports flexible organization and templating through Jinja2.</p>"},{"location":"advanced/hugo-export/#basic-usage","title":"Basic Usage","text":"<pre><code># Legacy export (flat structure)\nebk export hugo /path/to/library /path/to/hugo-site\n\n# New Jinja-based export with organization options\nebk export hugo /path/to/library /path/to/hugo-site --jinja --organize-by year\n</code></pre>"},{"location":"advanced/hugo-export/#organization-options","title":"Organization Options","text":"<p>With the <code>--jinja</code> flag, you can organize your library in different ways:</p>"},{"location":"advanced/hugo-export/#flat-default","title":"Flat (default)","text":"<p>All books in one directory: <pre><code>content/library/\n\u251c\u2500\u2500 _index.md\n\u251c\u2500\u2500 book-1-abc12345.md\n\u251c\u2500\u2500 book-2-def67890.md\n\u2514\u2500\u2500 ...\n</code></pre></p>"},{"location":"advanced/hugo-export/#by-year","title":"By Year","text":"<p><pre><code>ebk export hugo /path/to/library /path/to/hugo-site --jinja --organize-by year\n</code></pre> <pre><code>content/library/\n\u251c\u2500\u2500 _index.md\n\u251c\u2500\u2500 2023/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 book-1-abc12345.md\n\u251c\u2500\u2500 2024/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 book-2-def67890.md\n\u2514\u2500\u2500 unknown-year/\n    \u2514\u2500\u2500 ...\n</code></pre></p>"},{"location":"advanced/hugo-export/#by-language","title":"By Language","text":"<p><pre><code>ebk export hugo /path/to/library /path/to/hugo-site --jinja --organize-by language\n</code></pre> <pre><code>content/library/\n\u251c\u2500\u2500 _index.md\n\u251c\u2500\u2500 en/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 books...\n\u251c\u2500\u2500 es/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 books...\n\u2514\u2500\u2500 ...\n</code></pre></p>"},{"location":"advanced/hugo-export/#by-subject","title":"By Subject","text":"<p><pre><code>ebk export hugo /path/to/library /path/to/hugo-site --jinja --organize-by subject\n</code></pre> Books appear in multiple subject directories if they have multiple subjects: <pre><code>content/library/\n\u251c\u2500\u2500 _index.md\n\u251c\u2500\u2500 fiction/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 books...\n\u251c\u2500\u2500 science/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 books...\n\u2514\u2500\u2500 ...\n</code></pre></p>"},{"location":"advanced/hugo-export/#by-creator","title":"By Creator","text":"<p><pre><code>ebk export hugo /path/to/library /path/to/hugo-site --jinja --organize-by creator\n</code></pre> Books appear under each of their creators: <pre><code>content/library/\n\u251c\u2500\u2500 _index.md\n\u251c\u2500\u2500 jane-doe/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 books...\n\u251c\u2500\u2500 john-smith/\n\u2502   \u251c\u2500\u2500 _index.md\n\u2502   \u2514\u2500\u2500 books...\n\u2514\u2500\u2500 ...\n</code></pre></p>"},{"location":"advanced/hugo-export/#custom-templates","title":"Custom Templates","text":"<p>You can provide your own Jinja2 templates:</p> <pre><code>ebk export hugo /path/to/library /path/to/hugo-site --jinja \\\n    --template-dir /path/to/custom/templates\n</code></pre> <p>Your template directory should follow this structure: <pre><code>templates/\n\u2514\u2500\u2500 hugo/\n    \u251c\u2500\u2500 book.md      # Individual book page\n    \u251c\u2500\u2500 index.md     # Category index pages\n    \u2514\u2500\u2500 library.md   # Main library index\n</code></pre></p>"},{"location":"advanced/hugo-export/#template-variables","title":"Template Variables","text":""},{"location":"advanced/hugo-export/#bookmd","title":"book.md","text":"<ul> <li><code>book</code>: Dictionary with all metadata fields</li> <li><code>ebook_urls</code>: List of download URLs</li> <li><code>cover_url</code>: Cover image URL</li> </ul>"},{"location":"advanced/hugo-export/#indexmd","title":"index.md","text":"<ul> <li><code>title</code>: Section title</li> <li><code>organize_by</code>: Organization method</li> <li><code>group_key</code>: Current group identifier</li> <li><code>books</code>: List of books in this section</li> <li><code>book_count</code>: Number of books</li> </ul>"},{"location":"advanced/hugo-export/#librarymd","title":"library.md","text":"<ul> <li><code>title</code>: Library title</li> <li><code>books</code>: All books in the library</li> <li><code>stats</code>: Library statistics dictionary</li> </ul>"},{"location":"advanced/hugo-export/#hugo-configuration","title":"Hugo Configuration","text":"<p>To fully utilize the exported library, configure your Hugo site:</p>"},{"location":"advanced/hugo-export/#1-add-library-section","title":"1. Add Library Section","text":"<p>In <code>config.toml</code>: <pre><code>[[menu.main]]\n  name = \"Library\"\n  url = \"/library/\"\n  weight = 10\n</code></pre></p>"},{"location":"advanced/hugo-export/#2-create-custom-layouts","title":"2. Create Custom Layouts","text":"<p>Create <code>layouts/library/single.html</code> for book pages: <pre><code>{{ define \"main\" }}\n&lt;article class=\"book-page\"&gt;\n  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;\n\n  {{ with .Params.cover_image }}\n    &lt;img src=\"{{ . }}\" alt=\"Book cover\" class=\"book-cover\"&gt;\n  {{ end }}\n\n  &lt;div class=\"book-meta\"&gt;\n    {{ with .Params.creators_display }}\n      &lt;p&gt;By {{ delimit . \", \" }}&lt;/p&gt;\n    {{ end }}\n\n    {{ with .Params.description }}\n      &lt;div class=\"description\"&gt;{{ . | markdownify }}&lt;/div&gt;\n    {{ end }}\n  &lt;/div&gt;\n\n  {{ with .Params.ebook_files }}\n    &lt;div class=\"downloads\"&gt;\n      &lt;h3&gt;Download&lt;/h3&gt;\n      {{ range . }}\n        &lt;a href=\"{{ . }}\" class=\"download-btn\"&gt;Download&lt;/a&gt;\n      {{ end }}\n    &lt;/div&gt;\n  {{ end }}\n&lt;/article&gt;\n{{ end }}\n</code></pre></p>"},{"location":"advanced/hugo-export/#3-style-your-library","title":"3. Style Your Library","text":"<p>Add CSS for the book grid and cards: <pre><code>.book-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 2rem;\n}\n\n.book-card {\n  border: 1px solid #ddd;\n  padding: 1rem;\n  transition: transform 0.2s;\n}\n\n.book-card:hover {\n  transform: translateY(-5px);\n}\n</code></pre></p>"},{"location":"advanced/hugo-export/#advanced-features","title":"Advanced Features","text":""},{"location":"advanced/hugo-export/#filtering-and-search","title":"Filtering and Search","text":"<p>The exported structure supports Hugo's built-in taxonomy system. You can filter by: - Tags (from subjects) - Authors (from creators) - Years - Languages</p>"},{"location":"advanced/hugo-export/#multiple-views","title":"Multiple Views","text":"<p>Since books can appear in multiple categories (e.g., by subject AND by author), users can browse your library from different perspectives.</p>"},{"location":"advanced/hugo-export/#static-but-dynamic","title":"Static but Dynamic","text":"<p>While Hugo generates static files, the organization allows for client-side filtering and search using JavaScript if desired.</p>"},{"location":"advanced/hugo-export/#example-workflow","title":"Example Workflow","text":"<ol> <li> <p>Import your Calibre library:    <pre><code>ebk import-calibre ~/Calibre ~/my-ebk-library\n</code></pre></p> </li> <li> <p>Export to Hugo with year organization:    <pre><code>ebk export hugo ~/my-ebk-library ~/my-hugo-site --jinja --organize-by year\n</code></pre></p> </li> <li> <p>Build and serve your Hugo site:    <pre><code>cd ~/my-hugo-site\nhugo serve\n</code></pre></p> </li> <li> <p>Visit <code>http://localhost:1313/library/</code> to browse your collection!</p> </li> </ol>"},{"location":"advanced/hugo-export/#tips","title":"Tips","text":"<ul> <li>Use <code>--organize-by subject</code> for topic-based browsing</li> <li>Use <code>--organize-by creator</code> for author-centric libraries</li> <li>Combine with Hugo's search functionality for full-text search</li> <li>The unique_id in URLs ensures no conflicts even with duplicate titles</li> <li>Consider using Hugo's image processing for cover thumbnails</li> </ul>"},{"location":"advanced/recommendations/","title":"Recommendations","text":"<p>Finding similar books and getting recommendations.</p>"},{"location":"advanced/recommendations/#see-also","title":"See Also","text":"<ul> <li>CLI Reference - Recommendation commands</li> </ul>"},{"location":"advanced/symlink-dag/","title":"Symlink DAG Export Documentation","text":"<p>The symlink DAG (Directed Acyclic Graph) export feature creates a navigable directory structure that represents your library's tag hierarchy using symbolic links. This allows you to browse your ebook collection through tag categories using any file explorer or command line interface.</p>"},{"location":"advanced/symlink-dag/#overview","title":"Overview","text":"<p>The symlink DAG export transforms your flat library structure into a hierarchical directory tree where: - Each tag becomes a directory - Hierarchical tags (e.g., \"Programming/Python/Web\") create nested directories - Books appear in all relevant tag directories via symbolic links - The actual files are stored in a central <code>_books</code> directory</p>"},{"location":"advanced/symlink-dag/#usage","title":"Usage","text":""},{"location":"advanced/symlink-dag/#command-line","title":"Command Line","text":"<pre><code># Basic export\nebk export-dag /path/to/library /path/to/output\n\n# Use a different field for categorization (default: subjects)\nebk export-dag /path/to/library /path/to/output --tag-field creators\n\n# Skip copying actual files (only create symlinks to metadata)\nebk export-dag /path/to/library /path/to/output --no-files\n\n# Skip HTML index generation\nebk export-dag /path/to/library /path/to/output --no-index\n</code></pre>"},{"location":"advanced/symlink-dag/#python-api","title":"Python API","text":"<pre><code>from ebk import Library\n\nlib = Library.open(\"/path/to/library\")\n\n# Basic export\nlib.export_to_symlink_dag(\"/path/to/output\")\n\n# Custom options\nlib.export_to_symlink_dag(\n    \"/path/to/output\",\n    tag_field=\"creators\",  # Organize by authors instead of subjects\n    include_files=False,   # Don't copy ebook files\n    create_index=True      # Generate HTML indexes for web browsing\n)\n\n# Chain with other operations\n(lib.filter(lambda e: e.get(\"language\") == \"en\")\n    .export_to_symlink_dag(\"/english-books-dag\"))\n</code></pre>"},{"location":"advanced/symlink-dag/#directory-structure","title":"Directory Structure","text":""},{"location":"advanced/symlink-dag/#example-library","title":"Example Library","text":"<p>Given a library with these books: 1. \"Learn Python\" - Tags: [\"Programming\", \"Programming/Python\", \"Education\"] 2. \"Django Web Development\" - Tags: [\"Programming/Python/Web\", \"Web Development\"] 3. \"Machine Learning Basics\" - Tags: [\"Programming/Python\", \"AI/Machine Learning\"]</p>"},{"location":"advanced/symlink-dag/#generated-structure","title":"Generated Structure","text":"<pre><code>output-directory/\n\u251c\u2500\u2500 README.md                      # Explains the structure\n\u251c\u2500\u2500 _books/                        # Actual files stored here\n\u2502   \u251c\u2500\u2500 book_id_1/\n\u2502   \u2502   \u251c\u2500\u2500 metadata.json\n\u2502   \u2502   \u251c\u2500\u2500 learn_python.pdf\n\u2502   \u2502   \u2514\u2500\u2500 cover.jpg\n\u2502   \u251c\u2500\u2500 book_id_2/\n\u2502   \u2502   \u251c\u2500\u2500 metadata.json\n\u2502   \u2502   \u2514\u2500\u2500 django_web_dev.epub\n\u2502   \u2514\u2500\u2500 book_id_3/\n\u2502       \u251c\u2500\u2500 metadata.json\n\u2502       \u2514\u2500\u2500 ml_basics.pdf\n\u251c\u2500\u2500 Programming/\n\u2502   \u251c\u2500\u2500 index.html                 # Web index for this level\n\u2502   \u251c\u2500\u2500 Learn Python \u2192 ../../_books/book_id_1\n\u2502   \u251c\u2500\u2500 Python/\n\u2502   \u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2502   \u251c\u2500\u2500 Learn Python \u2192 ../../../_books/book_id_1\n\u2502   \u2502   \u251c\u2500\u2500 Machine Learning Basics \u2192 ../../../_books/book_id_3\n\u2502   \u2502   \u2514\u2500\u2500 Web/\n\u2502   \u2502       \u251c\u2500\u2500 index.html\n\u2502   \u2502       \u2514\u2500\u2500 Django Web Development \u2192 ../../../../_books/book_id_2\n\u251c\u2500\u2500 Education/\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 Learn Python \u2192 ../../_books/book_id_1\n\u251c\u2500\u2500 Web Development/\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 Django Web Development \u2192 ../../_books/book_id_2\n\u2514\u2500\u2500 AI/\n    \u251c\u2500\u2500 index.html\n    \u2514\u2500\u2500 Machine Learning/\n        \u251c\u2500\u2500 index.html\n        \u2514\u2500\u2500 Machine Learning Basics \u2192 ../../../_books/book_id_3\n</code></pre>"},{"location":"advanced/symlink-dag/#features","title":"Features","text":""},{"location":"advanced/symlink-dag/#hierarchical-tag-support","title":"Hierarchical Tag Support","text":"<p>Tags containing \"/\" are treated as hierarchical: - \"Programming/Python/Web\" creates three nested levels - Books are accessible at each level of the hierarchy - Allows natural drill-down navigation</p>"},{"location":"advanced/symlink-dag/#multiple-tag-appearances","title":"Multiple Tag Appearances","text":"<p>Books appear in multiple locations: - A book tagged with [\"Programming\", \"Education\"] appears in both directories - Symlinks ensure no file duplication - Changes to files are reflected everywhere</p>"},{"location":"advanced/symlink-dag/#web-navigation","title":"Web Navigation","text":"<p>When <code>create_index</code> is enabled: - Each directory contains an <code>index.html</code> file - Browse the structure in a web browser - Navigate between parent/child categories - Direct links to open book directories</p>"},{"location":"advanced/symlink-dag/#readable-names","title":"Readable Names","text":"<p>Symlinks use human-readable names: - Format: \"Title - First Author\" - Sanitized for filesystem compatibility - Actual files stored by ID in <code>_books</code></p>"},{"location":"advanced/symlink-dag/#navigation-methods","title":"Navigation Methods","text":""},{"location":"advanced/symlink-dag/#file-explorer","title":"File Explorer","text":"<ul> <li>Open the output directory in Finder, Windows Explorer, or any file manager</li> <li>Navigate through categories like regular folders</li> <li>Open books by following symlinks</li> </ul>"},{"location":"advanced/symlink-dag/#command-line_1","title":"Command Line","text":"<pre><code># Navigate the structure\ncd /path/to/output\ncd Programming/Python\nls\n\n# Find all Python books\nfind . -name \"*.pdf\" -path \"*/Python/*\"\n</code></pre>"},{"location":"advanced/symlink-dag/#web-browser","title":"Web Browser","text":"<pre><code># Open in default browser\nopen /path/to/output/index.html  # macOS\nxdg-open /path/to/output/index.html  # Linux\nstart /path/to/output/index.html  # Windows\n\n# Or open file:// URL directly\n</code></pre>"},{"location":"advanced/symlink-dag/#platform-considerations","title":"Platform Considerations","text":""},{"location":"advanced/symlink-dag/#linuxmacos","title":"Linux/macOS","text":"<ul> <li>Symlinks work natively</li> <li>No special permissions required</li> <li>Full support for all features</li> </ul>"},{"location":"advanced/symlink-dag/#windows","title":"Windows","text":"<ul> <li>Requires administrator privileges to create symlinks</li> <li>Or enable Developer Mode (Windows 10+)</li> <li>Alternative: Use WSL (Windows Subsystem for Linux)</li> </ul>"},{"location":"development/api-reference/","title":"API Reference","text":"<p>Complete API reference documentation.</p>"},{"location":"development/api-reference/#see-also","title":"See Also","text":"<ul> <li>API Guide - Detailed API documentation</li> <li>Python API - API usage guide</li> </ul>"},{"location":"development/architecture/","title":"Architecture","text":"<p>ebk architecture and design.</p>"},{"location":"development/architecture/#see-also","title":"See Also","text":"<ul> <li>CLAUDE.md - Complete architecture documentation</li> <li>DESIGN_PLAN.md - Design decisions</li> </ul>"},{"location":"development/contributing/","title":"Contributing","text":"<p>Guide to contributing to ebk.</p>"},{"location":"development/contributing/#development-setup","title":"Development Setup","text":"<pre><code>make setup\nmake test\n</code></pre>"},{"location":"development/contributing/#see-also","title":"See Also","text":"<ul> <li>CLAUDE.md - Development guidelines</li> </ul>"},{"location":"getting-started/configuration/","title":"Configuration Guide","text":"<p>ebk uses a centralized configuration system that stores all settings in a single JSON file. This guide covers how to set up and manage your ebk configuration.</p>"},{"location":"getting-started/configuration/#configuration-file-location","title":"Configuration File Location","text":"<p>The configuration file is stored at:</p> <pre><code>~/.config/ebk/config.json\n</code></pre> <p>On Windows: <pre><code>%USERPROFILE%\\.config\\ebk\\config.json\n</code></pre></p> <p>For backward compatibility, ebk also supports the legacy <code>~/.ebkrc</code> file, but the new JSON format is recommended.</p>"},{"location":"getting-started/configuration/#configuration-structure","title":"Configuration Structure","text":"<p>The configuration file is organized into four main sections:</p>"},{"location":"getting-started/configuration/#llm-configuration","title":"LLM Configuration","text":"<p>Settings for Large Language Model providers used in metadata enrichment:</p> <pre><code>{\n  \"llm\": {\n    \"provider\": \"ollama\",\n    \"model\": \"llama3.2\",\n    \"host\": \"localhost\",\n    \"port\": 11434,\n    \"api_key\": null,\n    \"temperature\": 0.7,\n    \"max_tokens\": null\n  }\n}\n</code></pre> <ul> <li>provider: LLM provider name (<code>ollama</code>, <code>openai</code>, etc.)</li> <li>model: Model name to use</li> <li>host: Server hostname (for remote GPU servers)</li> <li>port: Server port</li> <li>api_key: API key for commercial providers (future)</li> <li>temperature: Sampling temperature (0.0-1.0, lower = more consistent)</li> <li>max_tokens: Maximum tokens to generate (null = provider default)</li> </ul>"},{"location":"getting-started/configuration/#server-configuration","title":"Server Configuration","text":"<p>Settings for the web server interface:</p> <pre><code>{\n  \"server\": {\n    \"host\": \"0.0.0.0\",\n    \"port\": 8000,\n    \"auto_open_browser\": false,\n    \"page_size\": 50\n  }\n}\n</code></pre> <ul> <li>host: Server bind address (<code>0.0.0.0</code> = all interfaces, <code>127.0.0.1</code> = localhost only)</li> <li>port: Server port</li> <li>auto_open_browser: Automatically open browser when starting server</li> <li>page_size: Default number of books per page</li> </ul>"},{"location":"getting-started/configuration/#cli-configuration","title":"CLI Configuration","text":"<p>Default CLI behavior settings:</p> <pre><code>{\n  \"cli\": {\n    \"verbose\": false,\n    \"color\": true,\n    \"page_size\": 50\n  }\n}\n</code></pre> <ul> <li>verbose: Enable verbose logging by default</li> <li>color: Enable colored output (uses Rich)</li> <li>page_size: Default page size for list commands</li> </ul>"},{"location":"getting-started/configuration/#library-configuration","title":"Library Configuration","text":"<p>Library-related preferences:</p> <pre><code>{\n  \"library\": {\n    \"default_path\": null\n  }\n}\n</code></pre> <ul> <li>default_path: Default library path (can be used with commands that accept an optional path)</li> </ul>"},{"location":"getting-started/configuration/#managing-configuration","title":"Managing Configuration","text":""},{"location":"getting-started/configuration/#initialize-configuration","title":"Initialize Configuration","text":"<p>Create a configuration file with default values:</p> <pre><code>ebk config init\n</code></pre> <p>This creates <code>~/.config/ebk/config.json</code> if it doesn't exist.</p>"},{"location":"getting-started/configuration/#view-configuration","title":"View Configuration","text":"<p>View the entire configuration:</p> <pre><code>ebk config show\n</code></pre> <p>View a specific section:</p> <pre><code>ebk config show --section llm\nebk config show --section server\n</code></pre>"},{"location":"getting-started/configuration/#edit-configuration","title":"Edit Configuration","text":"<p>Edit the configuration file in your default editor:</p> <pre><code>ebk config edit\n</code></pre> <p>This opens the JSON file in the editor specified by your <code>EDITOR</code> environment variable.</p>"},{"location":"getting-started/configuration/#set-configuration-values","title":"Set Configuration Values","text":"<p>Set individual configuration values:</p> <pre><code># Set LLM provider\nebk config set llm.provider ollama\nebk config set llm.model llama3.2\nebk config set llm.host localhost\n\n# Set server options\nebk config set server.port 8080\nebk config set server.auto_open_browser true\n\n# Set CLI defaults\nebk config set cli.verbose true\nebk config set cli.page_size 100\n\n# Set library defaults\nebk config set library.default_path ~/my-ebooks\n</code></pre>"},{"location":"getting-started/configuration/#get-configuration-values","title":"Get Configuration Values","text":"<p>Retrieve specific configuration values:</p> <pre><code>ebk config get llm.model\nebk config get server.port\nebk config get library.default_path\n</code></pre>"},{"location":"getting-started/configuration/#common-configuration-scenarios","title":"Common Configuration Scenarios","text":""},{"location":"getting-started/configuration/#local-ollama-setup","title":"Local Ollama Setup","text":"<p>For running LLM features with a local Ollama instance:</p> <pre><code>ebk config init\nebk config set llm.provider ollama\nebk config set llm.model llama3.2\nebk config set llm.host localhost\nebk config set llm.port 11434\n</code></pre> <p>Then install and start Ollama:</p> <pre><code># Install Ollama from https://ollama.com\n# Pull the model\nollama pull llama3.2\n\n# Ollama runs automatically on port 11434\n</code></pre>"},{"location":"getting-started/configuration/#remote-gpu-server","title":"Remote GPU Server","text":"<p>For using a remote GPU server (e.g., basement server with NVIDIA GPU):</p> <pre><code>ebk config set llm.host 192.168.1.100\nebk config set llm.model llama3.2\n</code></pre> <p>Or use hostname:</p> <pre><code>ebk config set llm.host basement-gpu.local\n</code></pre>"},{"location":"getting-started/configuration/#web-server-for-local-access-only","title":"Web Server for Local Access Only","text":"<p>For security, bind the web server to localhost only:</p> <pre><code>ebk config set server.host 127.0.0.1\nebk config set server.port 8000\n</code></pre>"},{"location":"getting-started/configuration/#web-server-for-network-access","title":"Web Server for Network Access","text":"<p>To allow access from other devices on your network:</p> <pre><code>ebk config set server.host 0.0.0.0\nebk config set server.port 8000\n</code></pre> <p>Then access from other devices at <code>http://your-ip:8000</code></p>"},{"location":"getting-started/configuration/#development-mode","title":"Development Mode","text":"<p>For development with verbose output:</p> <pre><code>ebk config set cli.verbose true\nebk config set cli.color true\n</code></pre>"},{"location":"getting-started/configuration/#cli-overrides","title":"CLI Overrides","text":"<p>All configuration settings can be overridden via CLI arguments:</p> <pre><code># Override server settings\nebk serve ~/library --host 127.0.0.1 --port 9000\n\n# Override LLM settings\nebk enrich ~/library --host 192.168.1.50 --model mistral\n\n# Enable verbose mode for single command\nebk --verbose import book.pdf ~/library\n</code></pre> <p>CLI arguments always take precedence over configuration file values.</p>"},{"location":"getting-started/configuration/#environment-variables","title":"Environment Variables","text":"<p>Some settings can also be controlled via environment variables:</p> <pre><code># Ollama settings\nexport OLLAMA_HOST=192.168.1.100\nexport OLLAMA_PORT=11434\n\n# Editor for config edit\nexport EDITOR=vim\n</code></pre>"},{"location":"getting-started/configuration/#configuration-best-practices","title":"Configuration Best Practices","text":"<ol> <li> <p>Set default library path: If you primarily work with one library, set it as default:    <pre><code>ebk config set library.default_path ~/my-ebooks\n</code></pre></p> </li> <li> <p>Use remote GPU for better performance: If you have a machine with a GPU, configure it as the LLM host:    <pre><code>ebk config set llm.host gpu-server.local\n</code></pre></p> </li> <li> <p>Enable auto-open for convenience: If you frequently use the web interface:    <pre><code>ebk config set server.auto_open_browser true\n</code></pre></p> </li> <li> <p>Lower temperature for metadata: For consistent metadata generation:    <pre><code>ebk config set llm.temperature 0.3\n</code></pre></p> </li> <li> <p>Adjust page size for your screen: Larger screens can show more items:    <pre><code>ebk config set cli.page_size 100\nebk config set server.page_size 100\n</code></pre></p> </li> </ol>"},{"location":"getting-started/configuration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/configuration/#configuration-file-not-found","title":"Configuration file not found","text":"<p>If commands don't use your configuration:</p> <pre><code># Check if config exists\nls -la ~/.config/ebk/config.json\n\n# Create if missing\nebk config init\n</code></pre>"},{"location":"getting-started/configuration/#invalid-json","title":"Invalid JSON","text":"<p>If you manually edited the config and broke it:</p> <pre><code># Backup and recreate\nmv ~/.config/ebk/config.json ~/.config/ebk/config.json.bak\nebk config init\n</code></pre>"},{"location":"getting-started/configuration/#llm-connection-issues","title":"LLM connection issues","text":"<p>If metadata enrichment fails:</p> <pre><code># Test Ollama connection\ncurl http://localhost:11434/api/tags\n\n# Or remote server\ncurl http://192.168.1.100:11434/api/tags\n\n# Check configuration\nebk config get llm.host\nebk config get llm.port\n</code></pre>"},{"location":"getting-started/configuration/#server-wont-start","title":"Server won't start","text":"<p>If the web server fails to start:</p> <pre><code># Check if port is in use\nlsof -i :8000\n\n# Try different port\nebk serve ~/library --port 8080\n\n# Or update config\nebk config set server.port 8080\n</code></pre>"},{"location":"getting-started/configuration/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide - Start using ebk</li> <li>LLM Features - Learn about AI-powered features</li> <li>Web Server Guide - Use the web interface</li> <li>CLI Reference - Complete command reference</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<ul> <li>Python 3.10 or higher</li> <li>pip package manager</li> </ul>"},{"location":"getting-started/installation/#basic-installation","title":"Basic Installation","text":"<p>Install the core ebk package:</p> <pre><code>pip install ebk\n</code></pre>"},{"location":"getting-started/installation/#installation-with-optional-features","title":"Installation with Optional Features","text":""},{"location":"getting-started/installation/#web-dashboard","title":"Web Dashboard","text":"<pre><code>pip install ebk[streamlit]\n</code></pre>"},{"location":"getting-started/installation/#visualization-tools","title":"Visualization Tools","text":"<pre><code>pip install ebk[viz]\n</code></pre>"},{"location":"getting-started/installation/#all-features","title":"All Features","text":"<pre><code>pip install ebk[all]\n</code></pre>"},{"location":"getting-started/installation/#development-installation","title":"Development Installation","text":"<pre><code>pip install ebk[dev]\n</code></pre>"},{"location":"getting-started/installation/#installing-from-source","title":"Installing from Source","text":"<ol> <li> <p>Clone the repository: <pre><code>git clone https://github.com/queelius/ebk.git\ncd ebk\n</code></pre></p> </li> <li> <p>Create a virtual environment (recommended): <pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>Install in development mode: <pre><code>pip install -e \".[dev]\"\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#using-the-makefile","title":"Using the Makefile","text":"<p>The project includes a Makefile for common development tasks:</p> <pre><code># Set up complete development environment\nmake setup\n\n# Run tests\nmake test\n\n# Check code coverage\nmake test-coverage\n\n# Format code\nmake format\n\n# Run linting\nmake lint\n</code></pre>"},{"location":"getting-started/installation/#verifying-installation","title":"Verifying Installation","text":"<p>Check that ebk is installed correctly:</p> <pre><code>ebk --version\nebk --help\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Follow the Quick Start Guide to create your first library</li> <li>Read about Configuration options</li> <li>Explore the CLI Reference</li> </ul>"},{"location":"getting-started/quickstart/","title":"Quick Start Guide","text":"<p>This guide will help you get started with ebk in just a few minutes.</p>"},{"location":"getting-started/quickstart/#1-initialize-configuration","title":"1. Initialize Configuration","text":"<p>First, set up your configuration:</p> <pre><code># Create default configuration file\nebk config init\n\n# View current configuration\nebk config show\n\n# Set default library path (optional)\nebk config set library.default_path ~/my-ebooks\n</code></pre>"},{"location":"getting-started/quickstart/#2-create-your-first-library","title":"2. Create Your First Library","text":""},{"location":"getting-started/quickstart/#initialize-a-new-library","title":"Initialize a New Library","text":"<pre><code># Create new library\nebk init ~/my-ebooks\n</code></pre> <p>This creates a directory structure with: - <code>library.db</code> - SQLite database - <code>files/</code> - Ebook storage (hash-prefixed) - <code>covers/</code> - Cover images and thumbnails</p>"},{"location":"getting-started/quickstart/#from-calibre","title":"From Calibre","text":"<p>If you have an existing Calibre library:</p> <pre><code>ebk import-calibre ~/Calibre/Library --output ~/my-ebooks\n</code></pre>"},{"location":"getting-started/quickstart/#from-raw-ebooks","title":"From Raw eBooks","text":"<p>If you have a folder of PDF/EPUB files:</p> <pre><code># Import single file\nebk import book.pdf ~/my-ebooks\n\n# Import multiple files\nebk import ~/Downloads/*.pdf ~/my-ebooks\n\n# Import directory\nebk import ~/Downloads/ebooks ~/my-ebooks --recursive\n</code></pre>"},{"location":"getting-started/quickstart/#3-basic-operations","title":"3. Basic Operations","text":""},{"location":"getting-started/quickstart/#list-books","title":"List Books","text":"<pre><code># List all books\nebk list ~/my-ebooks\n\n# List with filters\nebk list ~/my-ebooks --author \"Knuth\" --language en\nebk list ~/my-ebooks --format pdf --rating 4\n\n# Limit results\nebk list ~/my-ebooks --limit 20\n</code></pre>"},{"location":"getting-started/quickstart/#search-books","title":"Search Books","text":"<pre><code># Full-text search (searches title, description, extracted text)\nebk search \"Python programming\" ~/my-ebooks\n\n# Search specific fields\nebk search \"machine learning\" ~/my-ebooks --fields title,description\n\n# Advanced filters\nebk search \"algorithms\" ~/my-ebooks --language en --author Knuth\n</code></pre>"},{"location":"getting-started/quickstart/#view-statistics","title":"View Statistics","text":"<pre><code># Show library statistics\nebk stats ~/my-ebooks\n\n# JSON output\nebk stats ~/my-ebooks --format json\n</code></pre>"},{"location":"getting-started/quickstart/#4-manage-reading-status","title":"4. Manage Reading Status","text":"<pre><code># Rate a book (0-5 stars)\nebk rate ~/my-ebooks &lt;book-id&gt; 5\n\n# Mark as favorite\nebk favorite ~/my-ebooks &lt;book-id&gt;\n\n# Add personal tags\nebk tag ~/my-ebooks &lt;book-id&gt; --add \"must-read\" \"technical\"\n\n# Remove tags\nebk tag ~/my-ebooks &lt;book-id&gt; --remove \"to-read\"\n</code></pre>"},{"location":"getting-started/quickstart/#5-web-interface","title":"5. Web Interface","text":"<p>Launch the web server to browse your library:</p> <pre><code># Start server\nebk serve ~/my-ebooks\n\n# Custom port\nebk serve ~/my-ebooks --port 8080\n\n# Auto-open browser\nebk serve ~/my-ebooks --auto-open\n\n# Configure defaults\nebk config set server.port 8000\nebk config set server.auto_open_browser true\n</code></pre> <p>Then open <code>http://localhost:8000</code> in your browser.</p>"},{"location":"getting-started/quickstart/#6-ai-powered-features-optional","title":"6. AI-Powered Features (Optional)","text":"<p>Enrich your library metadata using LLMs:</p>"},{"location":"getting-started/quickstart/#setup-ollama","title":"Setup Ollama","text":"<pre><code># Install Ollama from https://ollama.com\ncurl https://ollama.ai/install.sh | sh\n\n# Pull a model\nollama pull llama3.2\n</code></pre>"},{"location":"getting-started/quickstart/#configure-ebk","title":"Configure ebk","text":"<pre><code># Set up LLM provider\nebk config set llm.provider ollama\nebk config set llm.model llama3.2\nebk config set llm.host localhost\n</code></pre>"},{"location":"getting-started/quickstart/#enrich-metadata","title":"Enrich Metadata","text":"<pre><code># Generate tags for all books\nebk enrich ~/my-ebooks --generate-tags\n\n# Full enrichment\nebk enrich ~/my-ebooks \\\n  --generate-tags \\\n  --categorize \\\n  --enhance-descriptions\n\n# Preview changes (dry run)\nebk enrich ~/my-ebooks --generate-tags --dry-run\n</code></pre>"},{"location":"getting-started/quickstart/#using-the-python-api","title":"Using the Python API","text":"<pre><code>from pathlib import Path\nfrom ebk.library_db import Library\n\n# Open library\nlib = Library.open(Path(\"~/my-ebooks\"))\n\n# Search for books\nresults = lib.search(\"Python programming\")\nfor book in results:\n    print(f\"{book.title} by {', '.join([a.name for a in book.authors])}\")\n\n# Fluent query interface\nresults = (lib.query()\n    .filter_by_language(\"en\")\n    .filter_by_author(\"Knuth\")\n    .order_by(\"title\")\n    .limit(10)\n    .all())\n\n# Update reading status\nlib.update_reading_status(book_id=42, status=\"reading\", rating=4)\n\n# Add tags\nlib.add_tags(book_id=42, tags=[\"must-read\", \"algorithms\"])\n\n# Get statistics\nstats = lib.stats()\nprint(f\"Total books: {stats['total_books']}\")\n\n# Always close\nlib.close()\n</code></pre>"},{"location":"getting-started/quickstart/#quick-reference-card","title":"Quick Reference Card","text":""},{"location":"getting-started/quickstart/#common-commands","title":"Common Commands","text":"<pre><code># Initialize\nebk init ~/library\n\n# Import\nebk import book.pdf ~/library\nebk import-calibre ~/Calibre ~/library\n\n# Browse\nebk list ~/library\nebk search \"query\" ~/library\nebk stats ~/library\n\n# Web interface\nebk serve ~/library\n\n# AI enrichment\nebk enrich ~/library --generate-tags\n\n# Configuration\nebk config show\nebk config set key value\n</code></pre>"},{"location":"getting-started/quickstart/#library-structure","title":"Library Structure","text":"<pre><code>~/my-ebooks/\n\u251c\u2500\u2500 library.db           # SQLite database\n\u251c\u2500\u2500 files/               # Ebook files (hash-prefixed)\n\u2502   \u251c\u2500\u2500 ab/\n\u2502   \u2502   \u2514\u2500\u2500 abc123...pdf\n\u2502   \u2514\u2500\u2500 cd/\n\u2502       \u2514\u2500\u2500 cde456...epub\n\u251c\u2500\u2500 covers/              # Cover images\n\u2502   \u251c\u2500\u2500 ab/\n\u2502   \u2502   \u2514\u2500\u2500 abc123.jpg\n\u2502   \u2514\u2500\u2500 thumbnails/\n\u2502       \u2514\u2500\u2500 abc123_thumb.jpg\n\u2514\u2500\u2500 vectors/             # Vector embeddings (future)\n</code></pre>"},{"location":"getting-started/quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration Guide - Customize settings</li> <li>LLM Features - AI-powered enrichment</li> <li>Web Server - Web interface details</li> <li>CLI Reference - Complete command reference</li> <li>Python API - Programmatic access</li> <li>Import/Export - Data portability</li> </ul>"},{"location":"integrations/","title":"Integrations","text":"<p>Optional integrations for extended functionality.</p>"},{"location":"integrations/#available-integrations","title":"Available Integrations","text":"<ul> <li>Streamlit Dashboard - Web UI</li> <li>MCP Server - AI assistant integration</li> <li>Visualizations - Network graphs</li> </ul>"},{"location":"integrations/mcp/","title":"MCP Server","text":"<p>Model Context Protocol server for AI assistants.</p> <p>See integrations/mcp/README.md for details.</p>"},{"location":"integrations/streamlit/","title":"Streamlit Dashboard","text":"<p>Interactive web interface for ebk.</p>"},{"location":"integrations/streamlit/#installation","title":"Installation","text":"<pre><code>pip install ebk[streamlit]\n</code></pre> <p>See integrations/streamlit-dashboard/README.md for details.</p>"},{"location":"integrations/visualizations/","title":"Visualizations","text":"<p>Network analysis and visualization tools.</p> <p>See integrations/network/README.md for details.</p>"},{"location":"user-guide/api/","title":"Python API","text":"<p>Comprehensive guide to ebk's Python API for programmatic library management.</p>"},{"location":"user-guide/api/#overview","title":"Overview","text":"<p>ebk provides a powerful SQLAlchemy-based API for working with ebook libraries programmatically. The API follows modern Python conventions and supports context managers, fluent queries, and async operations (for LLM features).</p>"},{"location":"user-guide/api/#basic-usage","title":"Basic Usage","text":""},{"location":"user-guide/api/#opening-a-library","title":"Opening a Library","text":"<pre><code>from pathlib import Path\nfrom ebk.library_db import Library\n\n# Open existing library\nlib = Library.open(Path(\"~/my-library\"))\n\n# Use context manager (recommended)\nwith Library.open(Path(\"~/my-library\")) as lib:\n    # Work with library\n    results = lib.search(\"Python\")\n\n# Library is automatically closed\n</code></pre> <p>See the API Guide for complete documentation.</p>"},{"location":"user-guide/api/#core-classes","title":"Core Classes","text":"<ul> <li><code>Library</code> - Main library class</li> <li><code>Book</code> - Book model (SQLAlchemy ORM)</li> <li><code>Author</code> - Author model</li> <li><code>Subject</code> - Subject/tag model</li> <li><code>File</code> - File model</li> <li><code>Cover</code> - Cover image model</li> </ul>"},{"location":"user-guide/api/#further-reading","title":"Further Reading","text":"<ul> <li>API Guide - Complete API reference</li> <li>LLM Features - AI-powered features</li> <li>CLI Reference - Command-line interface</li> </ul>"},{"location":"user-guide/cli/","title":"CLI Reference","text":"<p>Complete reference for all ebk commands.</p>"},{"location":"user-guide/cli/#global-options","title":"Global Options","text":"<pre><code>ebk --help              # Show help\nebk --verbose           # Enable verbose output\nebk --version           # Show version\n</code></pre>"},{"location":"user-guide/cli/#library-management-commands","title":"Library Management Commands","text":""},{"location":"user-guide/cli/#init","title":"init","text":"<p>Initialize a new library:</p> <pre><code>ebk init &lt;library-path&gt;\n</code></pre> <p>Creates a new ebk library with database and directory structure.</p>"},{"location":"user-guide/cli/#import","title":"import","text":"<p>Import ebook files:</p> <pre><code>ebk import &lt;file&gt; &lt;library-path&gt;\nebk import &lt;file1&gt; &lt;file2&gt; ... &lt;library-path&gt;\nebk import ~/books/*.pdf &lt;library-path&gt;\n</code></pre> <p>Options: - <code>--extract-text</code> - Extract text for FTS (default: true) - <code>--extract-cover</code> - Extract cover image (default: true) - <code>--recursive</code> - Import directories recursively</p>"},{"location":"user-guide/cli/#import-calibre","title":"import-calibre","text":"<p>Import from Calibre library:</p> <pre><code>ebk import-calibre &lt;calibre-library&gt; --output &lt;ebk-library&gt;\n</code></pre> <p>Options: - <code>--output</code> - Output library path (required) - <code>--formats</code> - File formats to import (default: all)</p>"},{"location":"user-guide/cli/#list","title":"list","text":"<p>List books in library:</p> <pre><code>ebk list &lt;library-path&gt;\n</code></pre> <p>Options: - <code>--author &lt;name&gt;</code> - Filter by author - <code>--language &lt;code&gt;</code> - Filter by language (e.g., en, de) - <code>--format &lt;format&gt;</code> - Filter by file format (pdf, epub, mobi) - <code>--rating &lt;number&gt;</code> - Filter by minimum rating (0-5) - <code>--tag &lt;tag&gt;</code> - Filter by personal tag - <code>--limit &lt;number&gt;</code> - Limit results (default: 50) - <code>--sort-by &lt;field&gt;</code> - Sort by field (title, author, date, rating) - <code>--format json</code> - Output as JSON</p>"},{"location":"user-guide/cli/#search","title":"search","text":"<p>Full-text search:</p> <pre><code>ebk search &lt;query&gt; &lt;library-path&gt;\n</code></pre> <p>Searches across: - Book title - Description - Extracted text content</p> <p>Options: - <code>--fields &lt;field1,field2&gt;</code> - Limit search to specific fields - <code>--language &lt;code&gt;</code> - Filter by language - <code>--author &lt;name&gt;</code> - Filter by author - <code>--limit &lt;number&gt;</code> - Limit results</p>"},{"location":"user-guide/cli/#stats","title":"stats","text":"<p>Show library statistics:</p> <pre><code>ebk stats &lt;library-path&gt;\n</code></pre> <p>Options: - <code>--format json</code> - Output as JSON</p> <p>Displays: - Total books, authors, subjects - File formats and counts - Languages - Storage size</p>"},{"location":"user-guide/cli/#reading-management","title":"Reading Management","text":""},{"location":"user-guide/cli/#rate","title":"rate","text":"<p>Rate a book:</p> <pre><code>ebk rate &lt;library-path&gt; &lt;book-id&gt; &lt;rating&gt;\n</code></pre> <p>Rating: 0-5 (0 = unrated)</p>"},{"location":"user-guide/cli/#favorite","title":"favorite","text":"<p>Toggle favorite status:</p> <pre><code>ebk favorite &lt;library-path&gt; &lt;book-id&gt;\n</code></pre>"},{"location":"user-guide/cli/#tag","title":"tag","text":"<p>Manage personal tags:</p> <pre><code># Add tags\nebk tag &lt;library-path&gt; &lt;book-id&gt; --add \"tag1\" \"tag2\"\n\n# Remove tags\nebk tag &lt;library-path&gt; &lt;book-id&gt; --remove \"tag1\"\n\n# List tags\nebk tag &lt;library-path&gt; &lt;book-id&gt; --list\n</code></pre>"},{"location":"user-guide/cli/#purge","title":"purge","text":"<p>Remove books from library:</p> <pre><code>ebk purge &lt;library-path&gt; [options]\n</code></pre> <p>Options: - <code>--rating &lt;n&gt;</code> - Remove books with rating &lt;= n - <code>--unread</code> - Remove unread books - <code>--format &lt;fmt&gt;</code> - Remove specific format - <code>--confirm</code> - Skip confirmation prompt</p> <p>Warning: This permanently removes books!</p>"},{"location":"user-guide/cli/#web-server","title":"Web Server","text":""},{"location":"user-guide/cli/#serve","title":"serve","text":"<p>Start web server:</p> <pre><code>ebk serve &lt;library-path&gt;\n</code></pre> <p>Options: - <code>--host &lt;host&gt;</code> - Bind address (default: from config) - <code>--port &lt;port&gt;</code> - Port number (default: from config) - <code>--auto-open</code> - Open browser automatically</p>"},{"location":"user-guide/cli/#ai-powered-features","title":"AI-Powered Features","text":""},{"location":"user-guide/cli/#enrich","title":"enrich","text":"<p>Enrich metadata using LLM:</p> <pre><code>ebk enrich &lt;library-path&gt;\n</code></pre> <p>Options: - <code>--generate-tags</code> - Generate descriptive tags - <code>--categorize</code> - Assign hierarchical categories - <code>--enhance-descriptions</code> - Improve descriptions - <code>--assess-difficulty</code> - Determine reading level - <code>--book-id &lt;id&gt;</code> - Enrich specific book - <code>--host &lt;host&gt;</code> - LLM server host - <code>--model &lt;model&gt;</code> - LLM model name - <code>--dry-run</code> - Preview changes without saving - <code>--batch-size &lt;n&gt;</code> - Process n books at a time</p>"},{"location":"user-guide/cli/#configuration","title":"Configuration","text":""},{"location":"user-guide/cli/#config","title":"config","text":"<p>Manage configuration:</p> <pre><code># Initialize\nebk config init\n\n# View all\nebk config show\n\n# View section\nebk config show --section llm\n\n# Edit\nebk config edit\n\n# Set value\nebk config set &lt;key&gt; &lt;value&gt;\n\n# Get value\nebk config get &lt;key&gt;\n</code></pre> <p>Configuration keys: - <code>llm.provider</code> - LLM provider (ollama, openai) - <code>llm.model</code> - Model name - <code>llm.host</code> - Server host - <code>llm.port</code> - Server port - <code>llm.temperature</code> - Sampling temperature - <code>server.host</code> - Web server host - <code>server.port</code> - Web server port - <code>server.auto_open_browser</code> - Auto-open browser - <code>server.page_size</code> - Results per page - <code>cli.verbose</code> - Verbose output - <code>cli.color</code> - Colored output - <code>library.default_path</code> - Default library path</p>"},{"location":"user-guide/cli/#export-and-utilities","title":"Export and Utilities","text":""},{"location":"user-guide/cli/#export","title":"export","text":"<p>Export library:</p> <pre><code># Export to ZIP\nebk export zip &lt;library-path&gt; &lt;output.zip&gt;\n\n# Export to JSON\nebk export json &lt;library-path&gt; &lt;output.json&gt;\n</code></pre>"},{"location":"user-guide/cli/#vlib","title":"vlib","text":"<p>Manage virtual libraries (filtered views):</p> <pre><code># Create virtual library\nebk vlib create &lt;library-path&gt; &lt;name&gt; [filters]\n\n# List virtual libraries\nebk vlib list &lt;library-path&gt;\n\n# Delete virtual library\nebk vlib delete &lt;library-path&gt; &lt;name&gt;\n</code></pre>"},{"location":"user-guide/cli/#note","title":"note","text":"<p>Manage book notes and annotations:</p> <pre><code># Add note\nebk note add &lt;library-path&gt; &lt;book-id&gt; \"&lt;note text&gt;\"\n\n# List notes\nebk note list &lt;library-path&gt; &lt;book-id&gt;\n\n# Delete note\nebk note delete &lt;library-path&gt; &lt;note-id&gt;\n</code></pre>"},{"location":"user-guide/cli/#view","title":"view","text":"<p>View book content:</p> <pre><code>ebk view &lt;library-path&gt; &lt;book-id&gt;\n</code></pre> <p>Opens the book in the default application for its format.</p>"},{"location":"user-guide/cli/#about","title":"about","text":"<p>Show information about ebk:</p> <pre><code>ebk about\n</code></pre> <p>Displays version, installation path, and configuration location.</p>"},{"location":"user-guide/cli/#examples","title":"Examples","text":""},{"location":"user-guide/cli/#import-and-organize","title":"Import and Organize","text":"<pre><code># Create library\nebk init ~/my-library\n\n# Import Calibre collection\nebk import-calibre ~/Calibre/Library --output ~/my-library\n\n# Import additional files\nebk import ~/Downloads/*.pdf ~/my-library\n\n# Generate tags\nebk enrich ~/my-library --generate-tags\n</code></pre>"},{"location":"user-guide/cli/#search-and-filter","title":"Search and Filter","text":"<pre><code># Search for Python books\nebk search \"Python programming\" ~/my-library\n\n# List highly rated books\nebk list ~/my-library --rating 4\n\n# Find books by Knuth\nebk list ~/my-library --author Knuth\n</code></pre>"},{"location":"user-guide/cli/#web-interface-workflow","title":"Web Interface Workflow","text":"<pre><code># Configure server\nebk config set server.port 8000\nebk config set server.auto_open_browser true\n\n# Start server\nebk serve ~/my-library\n\n# Browse at http://localhost:8000\n</code></pre>"},{"location":"user-guide/cli/#batch-processing","title":"Batch Processing","text":"<pre><code># Import multiple directories\nfind ~/Downloads -name \"*.pdf\" -exec ebk import {} ~/my-library \\;\n\n# Enrich all books\nebk enrich ~/my-library --generate-tags --categorize --batch-size 10\n\n# Export for backup\nebk export zip ~/my-library ~/backup-$(date +%Y%m%d).zip\n</code></pre>"},{"location":"user-guide/cli/#see-also","title":"See Also","text":"<ul> <li>Configuration Guide - Configure defaults</li> <li>LLM Features - AI-powered enrichment</li> <li>Web Server - Web interface details</li> <li>Python API - Programmatic access</li> </ul>"},{"location":"user-guide/import-export/","title":"Import/Export","text":"<p>Guide to importing and exporting ebook libraries.</p>"},{"location":"user-guide/import-export/#see-also","title":"See Also","text":"<ul> <li>CLI Reference - Import/export commands</li> </ul>"},{"location":"user-guide/library-management/","title":"Library Management","text":"<p>Managing your ebook library.</p>"},{"location":"user-guide/library-management/#see-also","title":"See Also","text":"<ul> <li>CLI Reference - Management commands</li> </ul>"},{"location":"user-guide/llm-features/","title":"LLM-Powered Features","text":"<p>ebk includes AI-powered features for metadata enrichment using Large Language Models (LLMs). These features can automatically generate tags, categorize books, enhance descriptions, and more.</p>"},{"location":"user-guide/llm-features/#overview","title":"Overview","text":"<p>The LLM features are built on an abstract provider system that supports multiple backends:</p> <ul> <li>Ollama - Local and remote models (currently supported)</li> <li>OpenAI - GPT models (planned)</li> <li>Anthropic - Claude models (planned)</li> <li>Custom providers - Extend with your own</li> </ul>"},{"location":"user-guide/llm-features/#quick-start","title":"Quick Start","text":""},{"location":"user-guide/llm-features/#1-install-ollama","title":"1. Install Ollama","text":"<p>First, install Ollama from https://ollama.com</p> <pre><code># On macOS/Linux\ncurl https://ollama.ai/install.sh | sh\n\n# Or download installer from website for Windows\n</code></pre>"},{"location":"user-guide/llm-features/#2-pull-a-model","title":"2. Pull a Model","text":"<pre><code># Pull the recommended model\nollama pull llama3.2\n\n# Or try other models\nollama pull mistral\nollama pull codellama\nollama pull phi3\n</code></pre>"},{"location":"user-guide/llm-features/#3-configure-ebk","title":"3. Configure ebk","text":"<pre><code>ebk config init\nebk config set llm.provider ollama\nebk config set llm.model llama3.2\nebk config set llm.host localhost\n</code></pre>"},{"location":"user-guide/llm-features/#4-enrich-your-library","title":"4. Enrich Your Library","text":"<pre><code># Basic enrichment\nebk enrich ~/my-library\n\n# Full enrichment with all features\nebk enrich ~/my-library \\\n  --generate-tags \\\n  --categorize \\\n  --enhance-descriptions\n</code></pre>"},{"location":"user-guide/llm-features/#metadata-enrichment-features","title":"Metadata Enrichment Features","text":""},{"location":"user-guide/llm-features/#generate-tags","title":"Generate Tags","text":"<p>Automatically generate relevant tags based on book metadata and content:</p> <pre><code># Generate tags for all books\nebk enrich ~/library --generate-tags\n\n# Generate tags for specific book\nebk enrich ~/library --book-id 42 --generate-tags\n</code></pre> <p>Example output: - Input: \"Introduction to Algorithms\" by Cormen et al. - Generated tags: <code>algorithms</code>, <code>computer-science</code>, <code>textbook</code>, <code>data-structures</code>, <code>complexity-theory</code></p>"},{"location":"user-guide/llm-features/#categorize-books","title":"Categorize Books","text":"<p>Automatically assign books to hierarchical categories:</p> <pre><code># Categorize all books\nebk enrich ~/library --categorize\n\n# Categorize specific book\nebk enrich ~/library --book-id 42 --categorize\n</code></pre> <p>Example categories: - <code>Technology &gt; Computer Science &gt; Algorithms</code> - <code>Technology &gt; Programming &gt; Python</code> - <code>Science &gt; Mathematics &gt; Statistics</code></p>"},{"location":"user-guide/llm-features/#enhance-descriptions","title":"Enhance Descriptions","text":"<p>Generate or improve book descriptions based on content samples:</p> <pre><code># Enhance descriptions\nebk enrich ~/library --enhance-descriptions\n\n# For specific book\nebk enrich ~/library --book-id 42 --enhance-descriptions\n</code></pre> <p>This feature: - Creates descriptions for books without them - Expands brief descriptions with more detail - Extracts key themes and topics - Maintains professional tone</p>"},{"location":"user-guide/llm-features/#assess-difficulty-level","title":"Assess Difficulty Level","text":"<p>Automatically determine the reading difficulty level:</p> <pre><code>ebk enrich ~/library --assess-difficulty\n</code></pre> <p>Difficulty levels: - <code>beginner</code> - Introductory material - <code>intermediate</code> - Requires some background - <code>advanced</code> - Specialized knowledge required - <code>expert</code> - Research-level content</p>"},{"location":"user-guide/llm-features/#full-enrichment","title":"Full Enrichment","text":"<p>Run all enrichment features at once:</p> <pre><code># Complete enrichment\nebk enrich ~/library \\\n  --generate-tags \\\n  --categorize \\\n  --enhance-descriptions \\\n  --assess-difficulty\n</code></pre>"},{"location":"user-guide/llm-features/#provider-configuration","title":"Provider Configuration","text":""},{"location":"user-guide/llm-features/#local-ollama","title":"Local Ollama","text":"<p>The default configuration uses a local Ollama instance:</p> <pre><code>ebk config set llm.provider ollama\nebk config set llm.model llama3.2\nebk config set llm.host localhost\nebk config set llm.port 11434\n</code></pre>"},{"location":"user-guide/llm-features/#remote-gpu-server","title":"Remote GPU Server","text":"<p>For faster processing, use a remote machine with GPU:</p> <pre><code># By IP address\nebk config set llm.host 192.168.1.100\n\n# Or by hostname\nebk config set llm.host gpu-server.local\n\n# Test connection\ncurl http://192.168.1.100:11434/api/tags\n</code></pre> <p>Setup remote Ollama:</p> <p>On the remote machine:</p> <pre><code># Install Ollama\ncurl https://ollama.ai/install.sh | sh\n\n# Pull models\nollama pull llama3.2\n\n# Ollama automatically listens on 0.0.0.0:11434\n</code></pre>"},{"location":"user-guide/llm-features/#cli-overrides","title":"CLI Overrides","text":"<p>Override config settings for individual commands:</p> <pre><code># Use different host\nebk enrich ~/library --host 192.168.1.100\n\n# Use different model\nebk enrich ~/library --model mistral\n\n# Combine options\nebk enrich ~/library \\\n  --host gpu-server.local \\\n  --model llama3.2:70b \\\n  --generate-tags \\\n  --categorize\n</code></pre>"},{"location":"user-guide/llm-features/#model-selection","title":"Model Selection","text":""},{"location":"user-guide/llm-features/#recommended-models","title":"Recommended Models","text":"Model Size Speed Quality Use Case <code>llama3.2</code> 7B Fast Good General purpose, recommended <code>llama3.2:1b</code> 1B Very fast Fair Quick processing, limited resources <code>llama3.2:70b</code> 70B Slow Excellent Best quality, requires GPU <code>mistral</code> 7B Fast Good Alternative to llama3.2 <code>phi3</code> 3.8B Fast Good Balanced speed/quality <code>codellama</code> 7B Fast Good Technical books"},{"location":"user-guide/llm-features/#model-parameters","title":"Model Parameters","text":"<p>Adjust model behavior:</p> <pre><code># Lower temperature for consistent results\nebk config set llm.temperature 0.3\n\n# Higher temperature for creative descriptions\nebk config set llm.temperature 0.9\n\n# Limit output length\nebk config set llm.max_tokens 500\n</code></pre> <p>Temperature guide: - <code>0.0-0.3</code> - Very consistent, factual (recommended for tags/categories) - <code>0.4-0.7</code> - Balanced (default) - <code>0.8-1.0</code> - Creative, varied (for descriptions)</p>"},{"location":"user-guide/llm-features/#python-api","title":"Python API","text":"<p>Use LLM features programmatically:</p> <pre><code>from ebk.ai.llm_providers.ollama import OllamaProvider\nfrom ebk.ai.metadata_enrichment import MetadataEnrichmentService\n\n# Initialize provider\nprovider = OllamaProvider.local(model=\"llama3.2\")\n\n# Or remote\nprovider = OllamaProvider.remote(\n    host=\"192.168.1.100\",\n    model=\"llama3.2\"\n)\n\n# Create enrichment service\nservice = MetadataEnrichmentService(provider)\n\n# Use async context manager\nasync with provider:\n    # Generate tags\n    tags = await service.generate_tags(\n        title=\"The Pragmatic Programmer\",\n        authors=[\"Hunt\", \"Thomas\"],\n        description=\"From journeyman to master\"\n    )\n    print(f\"Generated tags: {tags}\")\n\n    # Categorize\n    categories = await service.categorize(\n        title=\"Introduction to Algorithms\",\n        subjects=[\"Algorithms\", \"Computer Science\"]\n    )\n    print(f\"Categories: {categories}\")\n\n    # Enhance description\n    enhanced = await service.enhance_description(\n        title=\"Clean Code\",\n        text_sample=\"Chapter 1: Clean Code...\"\n    )\n    print(f\"Enhanced: {enhanced}\")\n</code></pre>"},{"location":"user-guide/llm-features/#batch-processing","title":"Batch Processing","text":"<p>Process multiple books efficiently:</p> <pre><code>from ebk.library_db import Library\nfrom ebk.ai.llm_providers.ollama import OllamaProvider\nfrom ebk.ai.metadata_enrichment import MetadataEnrichmentService\nfrom pathlib import Path\n\n# Open library\nlib = Library.open(Path(\"~/my-library\"))\n\n# Initialize provider\nprovider = OllamaProvider.local(model=\"llama3.2\")\nservice = MetadataEnrichmentService(provider)\n\nasync with provider:\n    # Get books without tags\n    books = lib.query().limit(10).all()\n\n    for book in books:\n        # Generate tags\n        tags = await service.generate_tags(\n            title=book.title,\n            authors=[a.name for a in book.authors],\n            description=book.description\n        )\n\n        # Add to library\n        lib.add_tags(book.id, tags)\n        print(f\"Added tags to {book.title}: {tags}\")\n\nlib.close()\n</code></pre>"},{"location":"user-guide/llm-features/#advanced-usage","title":"Advanced Usage","text":""},{"location":"user-guide/llm-features/#dry-run-mode","title":"Dry Run Mode","text":"<p>Preview changes without saving:</p> <pre><code># See what would be changed\nebk enrich ~/library --generate-tags --dry-run\n</code></pre> <p>This outputs proposed changes but doesn't modify the library.</p>"},{"location":"user-guide/llm-features/#selective-enrichment","title":"Selective Enrichment","text":"<p>Enrich only books matching criteria:</p> <pre><code># Only books without descriptions\nebk enrich ~/library --enhance-descriptions --filter \"description:null\"\n\n# Only books in specific language\nebk enrich ~/library --generate-tags --filter \"language:en\"\n\n# Only specific author\nebk enrich ~/library --categorize --filter \"author:Knuth\"\n</code></pre>"},{"location":"user-guide/llm-features/#custom-prompts","title":"Custom Prompts","text":"<p>Customize the prompts used for enrichment:</p> <pre><code>from ebk.ai.metadata_enrichment import MetadataEnrichmentService\n\nservice = MetadataEnrichmentService(provider)\n\n# Custom tag generation prompt\ncustom_prompt = \"\"\"\nBased on this book:\nTitle: {title}\nAuthors: {authors}\nDescription: {description}\n\nGenerate 5-7 specific technical tags focusing on:\n1. Programming languages mentioned\n2. Specific technologies or frameworks\n3. Target audience level\n4. Book format (reference, tutorial, guide)\n\nReturn as comma-separated list.\n\"\"\"\n\ntags = await service.generate_tags_with_prompt(\n    title=\"Python Crash Course\",\n    custom_prompt=custom_prompt\n)\n</code></pre>"},{"location":"user-guide/llm-features/#performance-optimization","title":"Performance Optimization","text":""},{"location":"user-guide/llm-features/#use-remote-gpu","title":"Use Remote GPU","text":"<p>10-100x speedup by using a machine with NVIDIA GPU:</p> <pre><code># Configure remote GPU server\nebk config set llm.host gpu-server.local\n\n# Verify GPU is being used\nssh gpu-server.local nvidia-smi\n</code></pre>"},{"location":"user-guide/llm-features/#batch-size","title":"Batch Size","text":"<p>Process multiple books in parallel:</p> <pre><code># Process 10 books at a time\nebk enrich ~/library --batch-size 10\n</code></pre>"},{"location":"user-guide/llm-features/#model-selection_1","title":"Model Selection","text":"<p>Choose model based on speed/quality tradeoff:</p> <pre><code># Fastest (1B parameters)\nebk enrich ~/library --model llama3.2:1b\n\n# Balanced (7B parameters, recommended)\nebk enrich ~/library --model llama3.2\n\n# Best quality (70B parameters, slow)\nebk enrich ~/library --model llama3.2:70b\n</code></pre>"},{"location":"user-guide/llm-features/#text-sampling","title":"Text Sampling","text":"<p>Limit text analyzed for speed:</p> <pre><code># Use first 5000 chars of extracted text\nebk enrich ~/library --text-sample-size 5000\n</code></pre>"},{"location":"user-guide/llm-features/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/llm-features/#connection-refused","title":"Connection Refused","text":"<p>If ebk can't connect to Ollama:</p> <pre><code># Check if Ollama is running\ncurl http://localhost:11434/api/tags\n\n# Start Ollama (if needed)\nollama serve\n\n# Check configuration\nebk config get llm.host\nebk config get llm.port\n</code></pre>"},{"location":"user-guide/llm-features/#model-not-found","title":"Model Not Found","text":"<p>If the model isn't available:</p> <pre><code># List available models\nollama list\n\n# Pull the required model\nollama pull llama3.2\n\n# Verify model is available\ncurl http://localhost:11434/api/tags\n</code></pre>"},{"location":"user-guide/llm-features/#slow-performance","title":"Slow Performance","text":"<p>If enrichment is too slow:</p> <ol> <li> <p>Use remote GPU server: <pre><code>ebk config set llm.host gpu-server.local\n</code></pre></p> </li> <li> <p>Use smaller model: <pre><code>ebk config set llm.model llama3.2:1b\n</code></pre></p> </li> <li> <p>Reduce text sample size: <pre><code>ebk enrich ~/library --text-sample-size 2000\n</code></pre></p> </li> <li> <p>Process in batches: <pre><code>ebk enrich ~/library --batch-size 5\n</code></pre></p> </li> </ol>"},{"location":"user-guide/llm-features/#out-of-memory","title":"Out of Memory","text":"<p>If Ollama runs out of memory:</p> <ol> <li> <p>Use smaller model: <pre><code>ollama pull llama3.2:1b\nebk config set llm.model llama3.2:1b\n</code></pre></p> </li> <li> <p>Reduce context size: <pre><code>ebk config set llm.max_tokens 500\n</code></pre></p> </li> <li> <p>Close other applications consuming memory</p> </li> <li> <p>Use remote server with more RAM</p> </li> </ol>"},{"location":"user-guide/llm-features/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Start with dry run to preview changes:    <pre><code>ebk enrich ~/library --generate-tags --dry-run\n</code></pre></p> </li> <li> <p>Use appropriate temperature:</p> </li> <li>Tags/categories: 0.3 (consistent)</li> <li> <p>Descriptions: 0.7 (balanced)</p> </li> <li> <p>Process in batches for large libraries:    <pre><code>ebk enrich ~/library --batch-size 10\n</code></pre></p> </li> <li> <p>Use remote GPU for speed:    <pre><code>ebk config set llm.host gpu-server.local\n</code></pre></p> </li> <li> <p>Review and refine generated metadata periodically</p> </li> <li> <p>Backup library before bulk enrichment:    <pre><code>ebk export zip ~/library ~/backup.zip\n</code></pre></p> </li> </ol>"},{"location":"user-guide/llm-features/#examples","title":"Examples","text":""},{"location":"user-guide/llm-features/#enrich-new-import","title":"Enrich New Import","text":"<p>After importing books, enrich their metadata:</p> <pre><code># Import from Calibre\nebk import-calibre ~/Calibre/Library --output ~/my-library\n\n# Generate tags for all books\nebk enrich ~/my-library --generate-tags\n\n# Categorize\nebk enrich ~/my-library --categorize\n</code></pre>"},{"location":"user-guide/llm-features/#improve-existing-metadata","title":"Improve Existing Metadata","text":"<p>Enhance metadata for existing library:</p> <pre><code># Enhance descriptions for books without them\nebk enrich ~/library --enhance-descriptions --filter \"description:null\"\n\n# Add tags to all books\nebk enrich ~/library --generate-tags\n</code></pre>"},{"location":"user-guide/llm-features/#target-specific-books","title":"Target Specific Books","text":"<p>Enrich specific subset of books:</p> <pre><code># Only Python books\nebk enrich ~/library --generate-tags --filter \"subject:Python\"\n\n# Only books from specific author\nebk enrich ~/library --categorize --filter \"author:Knuth\"\n\n# Only recent books\nebk enrich ~/library --enhance-descriptions --filter \"year:2020-\"\n</code></pre>"},{"location":"user-guide/llm-features/#future-features","title":"Future Features","text":"<p>Planned LLM-powered features:</p> <ul> <li>Similarity detection - Find duplicate books with different metadata</li> <li>Summary generation - Create book summaries from content</li> <li>Reading level assessment - Determine appropriate audience</li> <li>Topic extraction - Identify key topics and themes</li> <li>Citation extraction - Extract and link referenced works</li> <li>Question generation - Create study questions</li> <li>Translation - Translate metadata between languages</li> </ul>"},{"location":"user-guide/llm-features/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration Guide - Set up LLM provider</li> <li>CLI Reference - Complete command reference</li> <li>Python API - Programmatic access</li> <li>LLM Providers README - Provider details</li> </ul>"},{"location":"user-guide/search/","title":"Search &amp; Query","text":"<p>Full-text search and advanced querying.</p>"},{"location":"user-guide/search/#full-text-search","title":"Full-Text Search","text":"<p>ebk uses SQLite FTS5 for fast full-text search.</p>"},{"location":"user-guide/search/#see-also","title":"See Also","text":"<ul> <li>CLI Reference - Search commands</li> </ul>"},{"location":"user-guide/server/","title":"Web Server","text":"<p>ebk includes a FastAPI-based web server that provides a modern web interface for browsing and managing your ebook library.</p>"},{"location":"user-guide/server/#quick-start","title":"Quick Start","text":""},{"location":"user-guide/server/#basic-usage","title":"Basic Usage","text":"<p>Start the server with default settings:</p> <pre><code>ebk serve ~/my-library\n</code></pre> <p>The server will start at <code>http://localhost:8000</code> (or the configured host/port).</p>"},{"location":"user-guide/server/#custom-host-and-port","title":"Custom Host and Port","text":"<pre><code># Listen on specific port\nebk serve ~/library --port 8080\n\n# Localhost only (more secure)\nebk serve ~/library --host 127.0.0.1 --port 8000\n\n# Listen on all interfaces (network access)\nebk serve ~/library --host 0.0.0.0 --port 8000\n</code></pre>"},{"location":"user-guide/server/#auto-open-browser","title":"Auto-Open Browser","text":"<pre><code># Open browser automatically\nebk serve ~/library --auto-open\n\n# Or configure as default\nebk config set server.auto_open_browser true\nebk serve ~/library\n</code></pre>"},{"location":"user-guide/server/#configuration","title":"Configuration","text":"<p>Configure server defaults in <code>~/.config/ebk/config.json</code>:</p> <pre><code># Set default port\nebk config set server.port 8080\n\n# Set default host\nebk config set server.host 0.0.0.0\n\n# Enable auto-open\nebk config set server.auto_open_browser true\n\n# Set page size\nebk config set server.page_size 50\n</code></pre> <p>View current configuration:</p> <pre><code>ebk config show --section server\n</code></pre>"},{"location":"user-guide/server/#web-interface-features","title":"Web Interface Features","text":""},{"location":"user-guide/server/#book-browsing","title":"Book Browsing","text":"<p>The web interface provides:</p> <ul> <li>Grid view with book covers</li> <li>List view with detailed information</li> <li>Pagination for large libraries</li> <li>Sorting by title, author, date, rating</li> <li>Filtering by author, language, format, rating, tags</li> </ul>"},{"location":"user-guide/server/#navigation","title":"Navigation","text":"<p>Use URL parameters for direct navigation:</p> <pre><code># Pagination\nhttp://localhost:8000/?page=2\n\n# Filtering\nhttp://localhost:8000/?author=Knuth\nhttp://localhost:8000/?language=en\nhttp://localhost:8000/?format=pdf\n\n# Sorting\nhttp://localhost:8000/?sort_by=title\nhttp://localhost:8000/?sort_by=date&amp;sort_order=desc\n\n# Combine filters\nhttp://localhost:8000/?author=Knuth&amp;language=en&amp;sort_by=title\n</code></pre>"},{"location":"user-guide/server/#search","title":"Search","text":"<p>Full-text search across title, author, and description:</p> <pre><code>http://localhost:8000/search?q=python+programming\n</code></pre>"},{"location":"user-guide/server/#book-details","title":"Book Details","text":"<p>Click on any book to view:</p> <ul> <li>Complete metadata</li> <li>All available formats</li> <li>Cover image</li> <li>Description</li> <li>Authors and subjects</li> <li>Reading status and rating</li> <li>Personal tags and notes</li> </ul>"},{"location":"user-guide/server/#file-access","title":"File Access","text":"<p>Click on format badges to:</p> <ul> <li>Open files directly in browser (PDF)</li> <li>Download files (EPUB, MOBI, etc.)</li> <li>View cover in full size</li> </ul>"},{"location":"user-guide/server/#rest-api","title":"REST API","text":"<p>The server provides a REST API for programmatic access.</p>"},{"location":"user-guide/server/#endpoints","title":"Endpoints","text":""},{"location":"user-guide/server/#list-books","title":"List Books","text":"<pre><code># Get all books (paginated)\ncurl http://localhost:8000/api/books\n\n# With filters\ncurl \"http://localhost:8000/api/books?author=Knuth&amp;language=en\"\n\n# With pagination\ncurl \"http://localhost:8000/api/books?page=2&amp;limit=50\"\n</code></pre> <p>Response:</p> <pre><code>{\n  \"books\": [\n    {\n      \"id\": 1,\n      \"title\": \"The Art of Computer Programming, Vol. 1\",\n      \"authors\": [\"Donald E. Knuth\"],\n      \"language\": \"en\",\n      \"publisher\": \"Addison-Wesley\",\n      \"publication_date\": \"1997-07-23\",\n      \"subjects\": [\"Computer Science\", \"Algorithms\"],\n      \"files\": [\n        {\"format\": \"pdf\", \"size\": 15728640, \"path\": \"...\"}\n      ],\n      \"rating\": 5.0,\n      \"favorite\": true,\n      \"reading_status\": \"read\",\n      \"tags\": [\"must-read\", \"reference\"]\n    }\n  ],\n  \"total\": 150,\n  \"page\": 1,\n  \"limit\": 50\n}\n</code></pre>"},{"location":"user-guide/server/#get-book-details","title":"Get Book Details","text":"<pre><code># Get specific book\ncurl http://localhost:8000/api/books/42\n</code></pre> <p>Response:</p> <pre><code>{\n  \"id\": 42,\n  \"title\": \"Introduction to Algorithms\",\n  \"subtitle\": \"Third Edition\",\n  \"authors\": [\"Cormen\", \"Leiserson\", \"Rivest\", \"Stein\"],\n  \"language\": \"en\",\n  \"publisher\": \"MIT Press\",\n  \"publication_date\": \"2009-07-31\",\n  \"series\": null,\n  \"series_index\": null,\n  \"description\": \"Comprehensive algorithms textbook...\",\n  \"subjects\": [\"Algorithms\", \"Computer Science\", \"Data Structures\"],\n  \"files\": [\n    {\"format\": \"pdf\", \"size\": 20971520, \"path\": \"files/ab/abc123.pdf\"},\n    {\"format\": \"epub\", \"size\": 10485760, \"path\": \"files/cd/cde456.epub\"}\n  ],\n  \"rating\": 5.0,\n  \"favorite\": true,\n  \"reading_status\": \"reading\",\n  \"tags\": [\"textbook\", \"algorithms\", \"must-read\"],\n  \"cover_path\": \"covers/ab/abc123.jpg\"\n}\n</code></pre>"},{"location":"user-guide/server/#search-books","title":"Search Books","text":"<pre><code># Full-text search\ncurl \"http://localhost:8000/api/search?q=machine+learning\"\n</code></pre>"},{"location":"user-guide/server/#update-book","title":"Update Book","text":"<pre><code># Update book metadata\ncurl -X PATCH http://localhost:8000/api/books/42 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"rating\": 5,\n    \"favorite\": true,\n    \"reading_status\": \"read\",\n    \"tags\": [\"must-read\", \"reference\"]\n  }'\n</code></pre>"},{"location":"user-guide/server/#upload-book","title":"Upload Book","text":"<pre><code># Import new book\ncurl -X POST http://localhost:8000/api/books \\\n  -F \"file=@book.pdf\" \\\n  -F \"title=My Book\" \\\n  -F \"authors=Author Name\"\n</code></pre>"},{"location":"user-guide/server/#get-statistics","title":"Get Statistics","text":"<pre><code># Library statistics\ncurl http://localhost:8000/api/stats\n</code></pre> <p>Response:</p> <pre><code>{\n  \"total_books\": 250,\n  \"total_authors\": 180,\n  \"total_subjects\": 45,\n  \"total_files\": 320,\n  \"total_size_mb\": 15360.5,\n  \"languages\": [\"en\", \"de\", \"fr\"],\n  \"formats\": [\"pdf\", \"epub\", \"mobi\"]\n}\n</code></pre>"},{"location":"user-guide/server/#api-authentication","title":"API Authentication","text":"<p>Currently the API is open (no authentication). For production use, consider:</p> <ol> <li>Reverse proxy with authentication (nginx, Apache)</li> <li>VPN for secure access</li> <li>Firewall rules to restrict access</li> </ol> <p>Future versions will support API keys and OAuth.</p>"},{"location":"user-guide/server/#network-access","title":"Network Access","text":""},{"location":"user-guide/server/#local-access-only","title":"Local Access Only","text":"<p>For security, bind to localhost:</p> <pre><code>ebk serve ~/library --host 127.0.0.1\n</code></pre> <p>Access from same machine only: <code>http://localhost:8000</code></p>"},{"location":"user-guide/server/#lan-access","title":"LAN Access","text":"<p>To access from other devices on your network:</p> <pre><code>ebk serve ~/library --host 0.0.0.0 --port 8000\n</code></pre> <p>Find your IP address:</p> <pre><code># Linux/Mac\nifconfig | grep inet\n\n# Windows\nipconfig\n</code></pre> <p>Access from other devices: <code>http://your-ip:8000</code></p>"},{"location":"user-guide/server/#public-access-not-recommended","title":"Public Access (Not Recommended)","text":"<p>For internet access, use a reverse proxy with authentication:</p> <pre><code># nginx configuration\nserver {\n    listen 80;\n    server_name books.example.com;\n\n    location / {\n        proxy_pass http://localhost:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # Basic authentication\n        auth_basic \"eBook Library\";\n        auth_basic_user_file /etc/nginx/.htpasswd;\n    }\n}\n</code></pre>"},{"location":"user-guide/server/#production-deployment","title":"Production Deployment","text":""},{"location":"user-guide/server/#using-systemd-linux","title":"Using systemd (Linux)","text":"<p>Create service file: <code>/etc/systemd/system/ebk-server.service</code></p> <pre><code>[Unit]\nDescription=ebk Web Server\nAfter=network.target\n\n[Service]\nType=simple\nUser=your-username\nWorkingDirectory=/home/your-username\nExecStart=/home/your-username/.local/bin/ebk serve /home/your-username/library --host 0.0.0.0 --port 8000\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Enable and start:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable ebk-server\nsudo systemctl start ebk-server\nsudo systemctl status ebk-server\n</code></pre>"},{"location":"user-guide/server/#using-docker","title":"Using Docker","text":"<p>Create <code>Dockerfile</code>:</p> <pre><code>FROM python:3.11-slim\n\nWORKDIR /app\n\n# Install ebk\nRUN pip install ebk\n\n# Expose port\nEXPOSE 8000\n\n# Mount library as volume\nVOLUME [\"/library\"]\n\n# Start server\nCMD [\"ebk\", \"serve\", \"/library\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n</code></pre> <p>Build and run:</p> <pre><code># Build image\ndocker build -t ebk-server .\n\n# Run container\ndocker run -d \\\n  -p 8000:8000 \\\n  -v ~/my-library:/library \\\n  --name ebk \\\n  ebk-server\n\n# View logs\ndocker logs -f ebk\n</code></pre>"},{"location":"user-guide/server/#using-docker-compose","title":"Using docker-compose","text":"<p>Create <code>docker-compose.yml</code>:</p> <pre><code>version: '3.8'\n\nservices:\n  ebk:\n    image: ebk-server\n    build: .\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ~/my-library:/library:ro\n    restart: unless-stopped\n    environment:\n      - EBK_HOST=0.0.0.0\n      - EBK_PORT=8000\n</code></pre> <p>Start:</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"user-guide/server/#security-considerations","title":"Security Considerations","text":""},{"location":"user-guide/server/#file-system-access","title":"File System Access","text":"<p>The web server requires:</p> <ul> <li>Read access to library files</li> <li>Write access for uploads and metadata updates</li> <li>Execute access for opening files</li> </ul> <p>Set appropriate permissions:</p> <pre><code># Set library ownership\nchown -R your-username:your-username ~/library\n\n# Set secure permissions\nchmod -R 755 ~/library/files\nchmod 644 ~/library/library.db\n</code></pre>"},{"location":"user-guide/server/#network-security","title":"Network Security","text":"<ol> <li> <p>Firewall: Only allow access from trusted networks    <pre><code># Allow from local network only\nsudo ufw allow from 192.168.1.0/24 to any port 8000\n</code></pre></p> </li> <li> <p>HTTPS: Use reverse proxy with SSL/TLS for production</p> </li> <li> <p>Authentication: Implement via reverse proxy or VPN</p> </li> </ol>"},{"location":"user-guide/server/#file-uploads","title":"File Uploads","text":"<p>If allowing uploads:</p> <ol> <li>Validate file types (only ebooks)</li> <li>Limit file size (prevent DoS)</li> <li>Scan for malware if accepting external files</li> <li>Use dedicated upload directory with restricted permissions</li> </ol>"},{"location":"user-guide/server/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/server/#port-already-in-use","title":"Port Already in Use","text":"<p>If port 8000 is already used:</p> <pre><code># Check what's using the port\nlsof -i :8000\n\n# Use different port\nebk serve ~/library --port 8080\n</code></pre>"},{"location":"user-guide/server/#permission-denied","title":"Permission Denied","text":"<p>If server can't read library:</p> <pre><code># Check permissions\nls -la ~/library\n\n# Fix permissions\nchmod -R 755 ~/library\n</code></pre>"},{"location":"user-guide/server/#cant-access-from-network","title":"Can't Access from Network","text":"<p>If other devices can't connect:</p> <ol> <li> <p>Check firewall:    <pre><code>sudo ufw status\nsudo ufw allow 8000\n</code></pre></p> </li> <li> <p>Verify host binding:    <pre><code># Must be 0.0.0.0 for network access\nebk serve ~/library --host 0.0.0.0\n</code></pre></p> </li> <li> <p>Check network:    <pre><code># Test from other device\nping your-ip\ntelnet your-ip 8000\n</code></pre></p> </li> </ol>"},{"location":"user-guide/server/#slow-performance","title":"Slow Performance","text":"<p>If web interface is slow:</p> <ol> <li> <p>Check database size:    <pre><code>du -h ~/library/library.db\n</code></pre></p> </li> <li> <p>Optimize database:    <pre><code>sqlite3 ~/library/library.db \"VACUUM;\"\n</code></pre></p> </li> <li> <p>Reduce page size:    <pre><code>ebk config set server.page_size 20\n</code></pre></p> </li> <li> <p>Generate thumbnails for faster loading:    <pre><code>ebk generate-thumbnails ~/library\n</code></pre></p> </li> </ol>"},{"location":"user-guide/server/#advanced-configuration","title":"Advanced Configuration","text":""},{"location":"user-guide/server/#custom-static-files","title":"Custom Static Files","text":"<p>Serve additional static files:</p> <pre><code>from fastapi.staticfiles import StaticFiles\nfrom ebk.server import app\n\n# Mount custom static directory\napp.mount(\"/static\", StaticFiles(directory=\"/path/to/static\"), name=\"static\")\n</code></pre>"},{"location":"user-guide/server/#custom-templates","title":"Custom Templates","text":"<p>Override default templates:</p> <pre><code>from fastapi.templating import Jinja2Templates\n\ntemplates = Jinja2Templates(directory=\"/path/to/templates\")\n</code></pre>"},{"location":"user-guide/server/#cors-configuration","title":"CORS Configuration","text":"<p>Enable CORS for API access from web apps:</p> <pre><code>from fastapi.middleware.cors import CORSMiddleware\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"http://localhost:3000\"],\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n</code></pre>"},{"location":"user-guide/server/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration Guide - Configure server defaults</li> <li>CLI Reference - All server options</li> <li>Python API - Programmatic server control</li> <li>REST API Documentation - Complete API reference</li> </ul>"}]}